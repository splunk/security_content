name: Services lolbas Execution Process Spawn
id: 0d85fde3-0de9-4eec-b386-6a8ba70f3935
version: 1
date: '2023-10-02'
author: Bhavin Patel, Splunk
status: validation
type: Anomaly
description: The following analytic identifies services.exe spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the Service Control Manager and creating a remote malicious service, the executed command is spawned as a child process of services.exe. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of services.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.
data_source:
- Windows Security 4688
search:
  selection1:
    actor.process.file.name: services.exe
  selection2:
    process.file.name:
    - at.exe
    - atbroker.exe
    - bash.exe
    - bitsadmin.exe
    - certoc.exe
    - cmd.exe
    - cmstp.exe
    - dllhost.exe
    - dnscmd.exe
    - extexport.exe
    - explorer.exe
    - forfiles.exe
    - ftp.exe
    - gpscript.exe
    - hh.exe
    - ie4uinit.exe
    - ieexec.exe
    - infdefaultinstall.exe
    - installutil.exe
    - lucallbackproxy.exe
    - mavinject.exe
    - microsoft.workflow.compiler.exe
    - mmc.exe
    - msbuild.exe
    - msconfig.exe
    - msdt.exe
    - mshta.exe
    - msiexec.exe
    - netsh.exe
    - odbcconf.exe
    - offlinescannershell.exe
    - pcwrun.exe
    - pcalua.exe
    - pnputil.exe
    - presentationhost.exe
    - rasautou.exe
    - regasm.exe
    - regsvcs.exe
    - regsvr32.exe
    - register-cimprovider.exe
    - rundll32.exe
    - runonce.exe
    - runscripthelper.exe
    - schtasks.exe
    - scriptrunner.exe
    - settingsynchost.exe
    - stordiag.exe
    - syncappvpublishingserver.exe
    - ttdinject.exe
    - tttracer.exe
    - verclsid.exe
    - wab.exe
    - wmic.exe
    - wuauclt.exe
    - xwizard.exe
  condition: (selection1 and selection2)
how_to_implement: The detection is based on data that originates from Endpoint Detection and Response (EDR) agents. These agents are designed to provide security-related telemetry from the endpoints where the agent is installed. To implement this search, you must ingest logs that contain the process GUID, process name, and parent process. Additionally, you must ingest complete command-line executions. These logs must be processed using the appropriate Splunk Technology Add-ons that are specific to the EDR product. The logs must also be mapped to the Processes node of the Endpoint data model. Use the Splunk Common Information Model (CIM) to normalize the field names and speed up the data modeling process.
known_false_positives: There are circumstances where the services application may legitimately execute and spawn a windows native binary to do an activity that is benign.
references:
- https://attack.mitre.org/techniques/T1543/003/
- https://pentestlab.blog/2020/07/21/lateral-movement-services
tags:
  analytic_story:
  - Suspicious Command-Line Executions
  - Insider Threat
  asset_type: Endpoint
  confidence: 50
  impact: 70
  message: An instance of services.exe spawning $process_name$ was identified
    on endpoint $dest_device_id$ by user $dest_user_id$, producing a suspicious event
    that warrants investigating.
  mitre_attack_id:
  - T1543.003
  observable: []
  product:
  - Splunk Behavioral Analytics
  required_fields: []
  kill_chain_phases:
  - Exploitation
  risk_score: 35
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1543.003/services_lolbas_execution/4688_xml_windows_security.log
    source: XmlWinEventLog:Security