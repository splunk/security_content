name: Windows Service Create with TSCon
id: 6d16f079-0195-4fdc-a97d-7cfacb6b9b4d
version: 1
date: '2022-02-23'
author: Michael Haag, Splunk
type: TTP
status: experimental
description: The following analytic detects potential RDP Hijacking attempts by monitoring
  a series of actions taken by an attacker to gain unauthorized access to a remote
  system. The attacker first runs the quser command to query the remote host for disconnected
  user sessions. Upon identifying a disconnected session, they use the sc.exe command
  to create a new Windows service with a binary path that launches tscon.exe. By specifying
  the disconnected session ID and a destination ID, the attacker can transfer the
  disconnected session to a new RDP session, effectively hijacking the user's session.
  This analytic allows security teams to detect and respond to RDP Hijacking attempts,
  mitigating potential risks and impacts on targeted systems.
data_source:
- Windows Security 4688
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  actor=ucast(map_get(input_event,"actor"), "map<string, any>", null) | eval actor_user=ucast(map_get(actor,"user"),
  "map<string, any>", null) | eval actor_user_name=ucast(map_get(actor_user,"name"),
  "string", null) | eval actor_process=ucast(map_get(actor,"process"), "map<string,
  any>", null) | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string",
  null) | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string,
  any>", null) | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"),
  "string", null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where match_regex(process_cmd_line, /(?i)/dest:rdp-tcp/)=true AND process_file_name="sc.exe"
  --finding_report--'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Processes` node. In addition,
  confirm the latest CIM App 4.20 or higher is installed and the latest TA for the
  endpoint product.
known_false_positives: False positives may arise in the RDP Hijacking analytic when
  legitimate administrators access remote sessions for maintenance or troubleshooting
  purposes. These activities might resemble an attacker''s attempt to hijack a disconnected
  session, leading to false alarms. To mitigate the risk of false positives and improve
  the overall security posture, organizations can implement Group Policy to automatically
  disconnect RDP sessions when they are complete. By enforcing this policy, administrators
  ensure that disconnected sessions are promptly terminated, reducing the window of
  opportunity for an attacker to hijack a session. Additionally, organizations can
  also implement access control mechanisms and monitor the behavior of privileged
  accounts to further enhance security and reduce the chances of false positives in
  RDP Hijacking detection.
references:
- https://doublepulsar.com/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1563.002/T1563.002.md
tags:
  analytic_story:
  - Active Directory Lateral Movement
  asset_type: Endpoint
  confidence: 50
  impact: 80
  message: An instance of $parent_process_name$ spawning $process_name$ was identified
    on endpoint $dest_device_id$ by user $dest_user_id$ attempting to hijack a RDP
    session.
  mitre_attack_id:
  - T1563.002
  - T1563
  - T1543.003
  observable:
  - name: process.pid
    type: Other
  - name: process.file.path
    type: File
  - name: process.file.name
    type: File
  - name: process.cmd_line
    type: Other
  - name: actor.user.name
    type: User Name
  - name: actor.process.pid
    type: Other
  - name: actor.process.file.path
    type: File Name
  - name: actor.process.file.name
    type: File Name
  - name: device.hostname
    type: Hostname
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 40
  security_domain: endpoint
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1563.002/rdphijack/4688_tscon_windows-security.log
    source: XmlWinEventLog
    sourcetype: XmlWinEventLog
