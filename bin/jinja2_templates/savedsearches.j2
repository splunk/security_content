#############
# Automatically generated by generator.py in splunk/security_content
# On Date: {{ time }} UTC
# Author: Splunk Security Research
# Contact: research@splunk.com
#############

### ESCU DETECTIONS ###

{% for detection in detections %}
{% if (detection.type == 'TTP' or detection.type == 'Anomaly' or detection.type == 'Hunting' or detection.type == 'Correlation') %}
[ESCU - {{ detection.name }} - Rule]
action.escu = 0
action.escu.enabled = 1
description = {{ detection.description }}
action.escu.mappings = {{ detection.mappings | tojson }}
{% if detection.data_model is defined %}
action.escu.data_models = [{{ detection.data_model | tojson }}]
{% else %}
action.escu.data_models = []
{% endif %}
action.escu.eli5 = {{ detection.description }}
{% if detection.how_to_implement is defined %}
action.escu.how_to_implement = {{ detection.how_to_implement }}
{% else %}
action.escu.how_to_implement = none
{% endif %}
{% if detection.known_false_positives is defined %}
action.escu.known_false_positives = {{ detection.known_false_positives }}
{% else %}
action.escu.known_false_positives = None
{% endif %}
action.escu.creation_date = {{ detection.date }}
action.escu.modification_date = {{ detection.date }}
action.escu.confidence = high
action.escu.full_search_name = ESCU - {{ detection.name }} - Rule
action.escu.search_type = detection
{% if detection.product is defined %}
action.escu.product = {{ detection.product | tojson }}
{% endif %}
{% if detection.providing_technologies is defined %}
action.escu.providing_technologies = {{ detection.providing_technologies | tojson }}
{% else %}
action.escu.providing_technologies = []
{% endif %}
{% if detection.tags.analytic_story is defined %}
action.escu.analytic_story = {{ detection.tags.analytic_story | tojson }}
{% if detection.tags.risk_score is defined %}
action.risk = 1
action.risk.param._risk_message = {{ detection.risk_message }}
action.risk.param._risk = {{ detection.risk | tojson }}
action.risk.param.verbose = 0
{% endif %}
{% else %}
action.escu.analytic_story = []
{% endif %}
cron_schedule = {{ detection.deployment.scheduling.cron_schedule }}
dispatch.earliest_time = {{ detection.deployment.scheduling.earliest_time }}
dispatch.latest_time = {{ detection.deployment.scheduling.latest_time }}
action.correlationsearch.enabled = 1
{% if detection.deprecated is defined %}
action.correlationsearch.label = ESCU - Deprecated - {{ detection.name }} - Rule
{% else %}
action.correlationsearch.label = ESCU - {{ detection.name }} - Rule
{% endif %}
action.correlationsearch.annotations = {{ detection.savedsearch_annotations | tojson }}
{% if detection.deployment.scheduling.schedule_window is defined %}
schedule_window = {{ detection.deployment.scheduling.schedule_window }}
{% endif %}
{% if detection.deployment.alert_action is defined %}
{% if detection.deployment.alert_action.notable is defined %}
action.notable = 1
{% if detection.nes_fields is defined %}
action.notable.param.nes_fields = {{ detection.nes_fields }}
{% endif %}
action.notable.param.rule_description = {{ detection.deployment.alert_action.notable.rule_description | custom_jinja2_enrichment_filter(detection) }}
action.notable.param.rule_title = {{ detection.deployment.alert_action.notable.rule_title | custom_jinja2_enrichment_filter(detection) }}
action.notable.param.security_domain = {{ detection.tags.security_domain }}
action.notable.param.severity = high
{% endif %}
{% if detection.deployment.alert_action.email is defined %}
action.email.subject.alert = {{ detection.deployment.alert_action.email.subject | custom_jinja2_enrichment_filter(detection) }}
action.email.to = {{ detection.deployment.alert_action.email.to }}
action.email.message.alert = {{ detection.deployment.alert_action.email.message | custom_jinja2_enrichment_filter(detection) }}
action.email.useNSSubject = 1
{% endif %}
{% if detection.deployment.alert_action.slack is defined %}
action.slack = 1
action.slack.param.channel = {{ detection.deployment.alert_action.slack.channel | custom_jinja2_enrichment_filter(detection) }}
action.slack.param.message = {{ detection.deployment.alert_action.slack.message | custom_jinja2_enrichment_filter(detection) }}
{% endif %}
{% if detection.deployment.alert_action.phantom is defined %}
action.sendtophantom = 1
action.sendtophantom.param._cam_workers = {{ detection.deployment.alert_action.phantom.cam_workers | custom_jinja2_enrichment_filter(detection) }}
action.sendtophantom.param.label = {{ detection.deployment.alert_action.phantom.label | custom_jinja2_enrichment_filter(detection) }}
action.sendtophantom.param.phantom_server = {{ detection.deployment.alert_action.phantom.phantom_server | custom_jinja2_enrichment_filter(detection) }}
action.sendtophantom.param.sensitivity = {{ detection.deployment.alert_action.phantom.sensitivity | custom_jinja2_enrichment_filter(detection) }}
action.sendtophantom.param.severity = {{ detection.deployment.alert_action.phantom.severity | custom_jinja2_enrichment_filter(detection) }}
{% endif %}
{% endif %}
alert.digest_mode = 1
{% if detection.disabled is defined %}
disabled = false
{% else %}
disabled = true
{% endif %}
enableSched = 1
allow_skew = 100%
counttype = number of events
relation = greater than
quantity = 0
realtime_schedule = 0
is_visible = false
search = {{ detection.search }}

{% endif %}
{% endfor %}
### END ESCU DETECTIONS ###


### ESCU BASELINES ###

{% for detection in detections %}
{% if (detection.type == 'Baseline') %}
[ESCU - {{ detection.name }}]
action.escu = 0
action.escu.enabled = 1
action.escu.search_type = support
action.escu.full_search_name = ESCU - {{ detection.name }}
description = {{ detection.description }}
action.escu.creation_date = {{ detection.date }}
action.escu.modification_date = {{ detection.date }}
{% if detection.tags.analytic_story is defined %}
action.escu.analytic_story = {{ detection.tags.analytic_story | tojson }}
{% else %}
action.escu.analytic_story = []
{% endif %}
{% if detection.data_model is defined %}
action.escu.data_models = [{{ detection.data_model | tojson }}]
{% else %}
action.escu.data_models = []
{% endif %}
cron_schedule = {{ detection.deployment.scheduling.cron_schedule }}
enableSched = 1
dispatch.earliest_time = {{ detection.deployment.scheduling.earliest_time }}
dispatch.latest_time = {{ detection.deployment.scheduling.latest_time }}
{% if detection.deployment.scheduling.schedule_window is defined %}
schedule_window = {{ detection.deployment.scheduling.schedule_window }}
{% endif %}
{% if detection.providing_technologies is defined %}
action.escu.providing_technologies = {{ detection.providing_technologies | tojson }}
{% else %}
action.escu.providing_technologies = []
{% endif %}
action.escu.eli5 = {{ detection.description }}
{% if detection.how_to_implement is defined %}
action.escu.how_to_implement = {{ detection.how_to_implement }}
{% else %}
action.escu.how_to_implement = none
{% endif %}
{% if detection.disabled is defined %}
disabled = false
{% else %}
disabled = true
{% endif %}
is_visible = false
search = {{ detection.search }}

{% endif %}
{% endfor %}


### ESCU RESPONSE TASKS ###

{% for detection in detections %}
{% if (detection.type == 'Investigation') %}
{% if detection.search is defined %}
[ESCU - {{ detection.name }} - Response Task]
action.escu = 0
action.escu.enabled = 1
action.escu.search_type = investigative
action.escu.full_search_name = ESCU - {{ detection.name }} - Response Task
description = {{ detection.description }}
action.escu.creation_date = {{ detection.date }}
action.escu.modification_date = {{ detection.date }}
{% if detection.tags is defined %}
action.escu.analytic_story = {{ detection.tags.analytic_story | tojson }}
{% else %}
action.escu.analytic_story = []
{% endif %}
action.escu.earliest_time_offset = 3600
action.escu.latest_time_offset = 86400
action.escu.providing_technologies = []
{% if detection.data_model is defined %}
action.escu.data_models = [{{ detection.data_model | tojson}}]
{% else %}
action.escu.data_models = []
{% endif %}
action.escu.eli5 = {{ detection.description }}
action.escu.how_to_implement = none
action.escu.known_false_positives = None at this time
disabled = true
schedule_window = auto
is_visible = false
search = {{ detection.search }}

{% endif %}
{% endif %}
{% endfor %}


### END ESCU RESPONSE TASKS ###
