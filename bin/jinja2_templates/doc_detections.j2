---
title: "{{detection.name}}"
excerpt: "{% for attack in detection.mitre_attacks -%}
{%- if attack.technique_id -%}
{{ attack.technique }}
{%- endif -%}
{% if not loop.last -%}, {% endif -%}
{% endfor %}"
categories:
  - {{detection.kind|capitalize}}
last_modified_at: {{detection.date}}
toc: true
toc_label: ""
tags:
{%- for attack in detection.mitre_attacks %}
  - {{ attack.technique }}
  {%- for attack_tactic in attack.tactic %}
  - {{ attack_tactic }}
  {%- endfor -%}
{%- endfor -%}
{%- for product in detection.tags.product %}
  - {{ product }}
{%- endfor -%}
{%- for cve in detection.cve %}
  - {{ cve.id }}
{%- endfor -%}
{%- for datamodel in detection.datamodel %}
  - {{ datamodel }}
{%- endfor %}
---

{% if detection.experimental is sameas true -%}
### ⚠️ WARNING THIS IS A EXPERIMENTAL DETECTION
We have not been able to test, simulate, or build datasets for this detection. Use at your own risk. This analytic is **NOT** supported.
{% endif %}

[Try in Splunk Security Cloud](https://www.splunk.com/en_us/cyber-security.html){: .btn .btn--success}

#### Description

{{ detection.description }}

- **Type**: [{{ detection.type }}](https://github.com/splunk/security_content/wiki/Detection-Analytic-Types)
- **Product**: {{ detection.tags.product|join(', ') }}
- **Datamodel**: {% for datamodel in detection.datamodel %}[{{ datamodel }}](https://docs.splunk.com/Documentation/CIM/latest/User/{{ datamodel|replace("_", "")}}){% if not loop.last %}, {% endif %}{%-endfor %}
- **Last Updated**: {{ detection.date }}
- **Author**: {{detection.author}}
- **ID**: {{ detection.id }}

{% if detection.mitre_attacks %}
#### [ATT&CK](https://attack.mitre.org/)

| ID             | Technique        |  Tactic             |
| -------------- | ---------------- |-------------------- |
{%- for attack in detection.mitre_attacks %}
{% if attack.technique_id -%}
{% set sub_technique = attack.technique_id.split('.') %}{% if sub_technique | length > 1 -%}
| [{{ attack.technique_id }}](https://attack.mitre.org/techniques/{{sub_technique[0]}}/{{sub_technique[1]}}/) | {{ attack.technique }} | {{ attack.tactic|join(', ') }} |
{% else -%}
| [{{ attack.technique_id }}](https://attack.mitre.org/techniques/{{attack.technique_id}}/) | {{ attack.technique }} | {{ attack.tactic|join(', ') }} |
{% endif -%}
{% endif -%}
{% endfor %}
{% endif -%}

#### Search

```
{{ detection.search|replace("|", "\n|")|safe }}
```

{% if detection.macros -%}
#### Macros
The SPL above uses the following Macros:
{% for macro in detection.macros -%}
{% if not '_filter' in macro.name -%}
* [{{ macro.name }}](https://github.com/splunk/security_content/blob/develop/macros/{{macro.name}}.yml)
{% endif -%}
{% endfor %}
{% endif -%}

Note that `{{detection.name | lower | replace(" ", "_") }}_filter` is a empty macro by default. It allows the user to filter out any results (false positives) without editing the SPL.

{% if detection.lookups -%}
#### Lookups
The SPL above uses the following Lookups:

{% for lookup in detection.lookups -%}
* [{{lookup.name}}](https://github.com/splunk/security_content/blob/develop/lookups/{{lookup.name}}.yml) with [data]({{lookup.csv_file_url}})
{% endfor %}
{% endif -%}

#### Required field
{% for field in detection.tags.required_fields -%}
* {{ field }}
{% endfor %}

#### How To Implement
{{ detection.how_to_implement}}

#### Known False Positives
{{ detection.known_false_positives}}

#### Associated Analytic story
{% for story in detection.tags.analytic_story -%}
* [{{ story }}](/stories/{{story|lower|replace(" ", "_")}})
{% endfor %}

#### Kill Chain Phase
{% for phase in detection.tags.kill_chain_phases -%}
* {{ phase }}
{% endfor %}

{% if detection.tags.observable %}
#### RBA

| Risk Score  | Impact      | Confidence   | Message      |
| ----------- | ----------- |--------------|--------------|
| {{(detection.tags.impact * detection.tags.confidence)/100}} | {{ detection.tags.impact }} | {{ detection.tags.confidence }} | {{detection.tags.message}} |
{% endif %}

{% if detection.cve %}
#### CVE

| ID          | Summary | [CVSS](https://nvd.nist.gov/vuln-metrics/cvss) |
| ----------- | ----------- | -------------- |
{% for cve in detection.cve -%}
| [{{ cve.id }}](https://nvd.nist.gov/vuln/detail/{{cve.id}}) | {{ cve.summary }} | {{ cve.cvss }} |
{% endfor %}
{% endif %}

#### Reference
{% if detection.references %}
{% for reference in detection.references -%}
* [{{ reference }}]({{ reference }})
{% endfor %}
{% endif %}

#### Test Dataset
Replay any dataset to Splunk Enterprise by using our [`replay.py`](https://github.com/splunk/attack_data#using-replaypy) tool or the [UI](https://github.com/splunk/attack_data#using-ui).
Alternatively you can replay a dataset into a [Splunk Attack Range](https://github.com/splunk/attack_range#replay-dumps-into-attack-range-splunk-server)

{% for dataset in detection.tags.dataset -%}
* [{{dataset}}]({{ dataset }})
{% endfor %}


[*source*](https://github.com/splunk/security_content/tree/develop/detections/{% if detection.experimental is sameas true -%}experimental/{%- endif -%}{{detection.kind}}/{{ detection.name | lower | replace (" ", "_") }}.yml) \| *version*: **{{detection.version}}**
