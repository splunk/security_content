name: Windows WSReset UAC Bypass
id: 3118f0c2-90d9-11ec-b833-acde48001122
version: 1
date: '2022-02-18'
author: Lou Stella, Splunk
type: Anomaly
datamodel:
- Endpoint_Registry
description: This analytic is built to detect a suspicious modification of the Windows
  registry related to UAC bypass. This technique is to modify the registry in this
  detection, create a registry value with the path of the payload and run WSreset.exe
  to bypass User Account Control.
search: '| from read_ssa_enriched_events() | where "Endpoint_Registry" IN (_datamodels)
  | eval timestamp=parse_long(ucast(map_get(input_event, "_time"), "string", null)),
  registry_path=lower(ucast(map_get(input_event, "registry_path"), "string", null)),
  registry_hive=lower(ucast(map_get(input_event, "registry_hive"), "string", null)),
  registry_value_name=lower(ucast(map_get(input_event, "registry_value_name"), "string",
  null)), registry_key_name=lower(ucast(map_get(input_event, "registry_key_name"),
  "string", null)), registry_value_type=lower(ucast(map_get(input_event, "registry_value_type"),
  "string", null)), registry_value_data=lower(ucast(map_get(input_event, "registry_value_data"),
  "string", null)), process_guid=lower(ucast(map_get(input_event, "process_guid"),
  "string", null)) | where registry_path IS NOT NULL AND registry_value_name IS NOT
  NULL and like (registry_path, "%\\\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\\\Shell\\\\open\\\\command%")
  AND (registry_value_name="(Default)" OR registry_value_name="DelegateExecute") |
  eval start_time=timestamp, end_time=timestamp, entities=mvappend(ucast(map_get(input_event,
  "dest_user_id"), "string", null), ucast(map_get(input_event, "dest_device_id"),
  "string", null)) | eval body=create_map(["registry_path", registry_path, "registry_hive",
  registry_hive, "registry_value_name", registry_value_name, "registry_key_name",
  registry_key_name, "registry_value_type", registry_value_type, "registry_value_data",
  registry_value_data, "process_guid", process_guid]) | into write_ssa_detected_events(); '
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint_Registry` datamodel.
known_false_positives: Unknown at this point in time.
references:
- https://github.com/hfiref0x/UACME
- https://blog.morphisec.com/trickbot-uses-a-new-windows-10-uac-bypass
tags:
  analytic_story:
  - Living Off The Land
  - Windows Defense Evasion Tactics
  cis20:
  - CIS 14
  confidence: 90
  context:
  - Source:Endpoint
  - Stage:Persistence
  - Stage:Privilege Escalation
  - Stage:Defense Evasion
  impact: 70
  kill_chain_phases:
  - Exploitation
  message: tbd
  mitre_attack_id:
  - T1548.002
  - T1548
  nist:
  - DE.AE
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - _time
  - registry_path
  - registry_hive
  - registry_value_name
  - registry_key_name
  - registry_value_type
  - registry_value_data
  - process_guid
  risk_score: 63
  risk_severity: medium
  security_domain: endpoint
  asset_type: Endpoint
