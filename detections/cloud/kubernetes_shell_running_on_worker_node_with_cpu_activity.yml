name: Kubernetes Shell Running on Worker Node with CPU Activity
id: cc1448e3-cc7a-4518-bc9f-2fa48f61a22b
version: 2
date: '2024-05-11'
author: Matthew Moore, Splunk
status: experimental
type: Anomaly
description: The following analytic identifies shell activity within the Kubernetes
  privilege scope on a worker node, specifically when shell processes are consuming
  CPU resources. It leverages process metrics from an OTEL collector hostmetrics receiver,
  pulled from Splunk Observability Cloud via the Splunk Infrastructure Monitoring
  Add-on, focusing on process.cpu.utilization and process.memory.utilization. This
  activity is significant as unauthorized shell processes can indicate a security
  threat, potentially compromising the node and the entire Kubernetes cluster. If
  confirmed malicious, attackers could gain full control over the host's resources,
  leading to data theft, service disruption, privilege escalation, and further attacks
  within the cluster.
data_source: []
search: '| mstats avg(process.cpu.utilization) as process.cpu.utilization avg(process.memory.utilization) as process.memory.utilization 
  where `kubernetes_metrics` AND process.executable.name IN ("sh","bash","csh", "tcsh") by host.name k8s.cluster.name k8s.node.name process.pid process.executable.name span=10s
  | search process.cpu.utilization>0 
  | stats avg(process.cpu.utilization) as process.cpu.utilization avg(process.memory.utilization) as process.memory.utilization by host.name k8s.cluster.name k8s.node.name process.pid process.executable.name
  | rename host.name as host
  | `kubernetes_shell_running_on_worker_node_with_cpu_activity_filter`'
how_to_implement: 'To implement this detection, follow these steps: 
  
  * Deploy the OpenTelemetry Collector (OTEL) to your Kubernetes cluster.

  * Enable the hostmetrics/process receiver in the OTEL configuration.

  * Ensure that the process metrics, specifically Process.cpu.utilization and process.memory.utilization,
  are enabled.

  * Install the Splunk Infrastructure Monitoring (SIM) add-on. (ref: https://splunkbase.splunk.com/app/5247)

  * Configure the SIM add-on with your Observability Cloud Organization ID and Access
  Token.

  * Set up the SIM modular input to ingest Process Metrics. Name this input "sim_process_metrics_to_metrics_index".

  * In the SIM configuration, set the Organization ID to your Observability Cloud
  Organization ID.

  * Set the Signal Flow Program to the following: data(''process.threads'').publish(label=''A'');
  data(''process.cpu.utilization'').publish(label=''B''); data(''process.cpu.time'').publish(label=''C'');
  data(''process.disk.io'').publish(label=''D''); data(''process.memory.usage'').publish(label=''E'');
  data(''process.memory.virtual'').publish(label=''F''); data(''process.memory.utilization'').publish(label=''G'');
  data(''process.cpu.utilization'').publish(label=''H''); data(''process.disk.operations'').publish(label=''I'');
  data(''process.handles'').publish(label=''J''); data(''process.threads'').publish(label=''K'')

  * Set the Metric Resolution to 10000.

  * Leave all other settings at their default values.

  * Run the Search Baseline Of Kubernetes Container Network IO Ratio '
known_false_positives: unknown
references:
- https://github.com/signalfx/splunk-otel-collector-chart/tree/main
tags:
  analytic_story:
  - Abnormal Kubernetes Behavior using Splunk Infrastructure Monitoring
  asset_type: Kubernetes
  confidence: 50
  impact: 50
  message: Kubernetes shell with cpu activity running on worker node on host $host$
  mitre_attack_id:
  - T1204
  observable:
  - name: host
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - process.cpu.utilization
  - process.memory.utilization
  - process.executable.name
  - host.name
  - k8s.cluster.name
  - k8s.node.name
  - process.pid
  security_domain: network
