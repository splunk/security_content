name: Github Commit In Develop
id: f3030cb6-0b02-11ec-8f22-acde48001122
version: 1
date: '2021-09-01'
author: Teoderick Contreras, Splunk
type: Anomaly
datamodel: []
description: This search is to detect a pushed or commit to develop branch. This is
  to avoid unwanted modification to develop without a review to the changes. Ideally
  in terms of devsecops the changes made in a branch and do a PR for review. of course
  in some cases admin of the project may did a changes directly to master branch
search: '`github` branches{}.name = main OR branches{}.name = develop |  stats count
  min(_time) as firstTime max(_time) as lastTime  by commit.author.html_url commit.commit.author.email
  commit.author.login commit.commit.message repository.pushed_at commit.commit.committer.date
  | eval phase="code" | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `github_commit_in_develop_filter`'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs related to github logs having the fork, commit, push metadata that can be use
  to monitor the changes in a github project.
known_false_positives: admin can do changes directly to develop branch
references:
- https://www.redhat.com/en/topics/devops/what-is-devsecops
tags:
  analytic_story:
  - Dev Sec Ops
  asset_type: GitHub
  confidence: 30
  context:
  - Source:Application Log
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1199/github_push_master/github_push_develop.json
  impact: 30
  kill_chain_phases:
  - Exploitation
  message: suspicious commit by $commit.commit.author.email$ to develop branch
  mitre_attack_id:
  - T1199
  observable:
  - name: commit.commit.author.email
    type: User
    role:
    - Attacker
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  risk_score: 9
  security_domain: endpoint
