name: Kubernetes Abuse of Secret by Unusual User Name
id: df6e9cae-5257-4a34-8f3a-df49fa0f5c46
version: 2
date: '2024-05-27'
author: Patrick Bareiss, Splunk
status: production
type: Anomaly
description: 'The following analytic detects unauthorized access or misuse of Kubernetes
  Secrets by unusual user names. It leverages Kubernetes Audit logs to identify anomalies
  in access patterns by analyzing the source of requests based on user names. This
  activity is significant for a SOC as Kubernetes Secrets store sensitive information
  like passwords, OAuth tokens, and SSH keys, making them critical assets. If confirmed
  malicious, this activity could lead to unauthorized access to sensitive systems
  or data, potentially resulting in significant security breaches and exfiltration
  of sensitive information.'
data_source:
- Kubernetes Audit
search: '`kube_audit` objectRef.resource=secrets verb=get
  | search NOT `kube_allowed_user_names`
  | fillnull
  | stats count by objectRef.name objectRef.namespace objectRef.resource requestReceivedTimestamp requestURI responseStatus.code sourceIPs{} stage user.groups{} user.uid user.username userAgent verb
  | rename sourceIPs{} as src_ip, user.username as user
  | `kubernetes_abuse_of_secret_by_unusual_user_name_filter`'
how_to_implement: The detection is based on data that originates from Kubernetes Audit logs. Ensure that audit logging is enabled in your Kubernetes cluster.
  Kubernetes audit logs provide a record of the requests made to the Kubernetes API server, which is crucial for monitoring and detecting suspicious activities.
  Configure the audit policy in Kubernetes to determine what kind of activities are logged. This is done by creating an Audit Policy and providing it to the API server.
  Use the Splunk OpenTelemetry Collector for Kubernetes to collect the logs. This doc will describe how to collect the audit log file https://github.com/signalfx/splunk-otel-collector-chart/blob/main/docs/migration-from-sck.md.
known_false_positives: unknown
references:
- https://kubernetes.io/docs/tasks/debug/debug-cluster/audit/
tags:
  analytic_story:
  - Kubernetes Security
  asset_type: Kubernetes
  confidence: 70
  impact: 70
  message: Access of Kubernetes secret $objectRef.name$ from unusual user name $user$
  mitre_attack_id:
  - T1552.007
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: src_ip
    type: IP Address
    role:
    - Attacker
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - objectRef.resource
  - verb
  - objectRef.name
  - objectRef.namespace
  - requestReceivedTimestamp
  - requestURI
  - responseStatus.code
  - sourceIPs{}
  - stage
  - user.groups{}
  - user.uid
  - user.username
  - userAgent
  - verb
  security_domain: network
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1552.007/kube_audit_get_secret/kube_audit_get_secret.json
    sourcetype: _json
    source: kubernetes
