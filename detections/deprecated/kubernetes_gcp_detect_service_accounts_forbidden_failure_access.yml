name: Kubernetes GCP detect service accounts forbidden failure access
id: 7094808d-432a-48e7-bb3c-77e96c894f3b
version: 1
date: '2020-06-23'
author: Rod Soto, Splunk
type: Hunting
datamodel: []
description: This search provides information on Kubernetes service accounts with
  failure or forbidden access status, this search can be extended by using top or
  rare operators to find trends or rarities in failure status, user agents, source
  IPs and request URI
search: '`google_gcp_pubsub_message` system:serviceaccounts data.protoPayload.response.status.allowed!=*
  | table src_ip src_user http_user_agent data.protoPayload.response.spec.resourceAttributes.namespace
  data.resource.labels.cluster_name data.protoPayload.response.spec.resourceAttributes.verb  data.protoPayload.request.status.allowed
  data.protoPayload.response.status.reason data.labels.authorization.k8s.io/decision
  | dedup src_ip src_user | `kubernetes_gcp_detect_service_accounts_forbidden_failure_access_filter`'
how_to_implement: You must install splunk add on for GCP. This search works with pubsub
  messaging service logs.
known_false_positives: This search can give false positives as there might be inherent
  issues with authentications and permissions at cluster.
references: []
tags:
  analytic_story:
  - Kubernetes Sensitive Object Access Activity
  asset_type: GCP GKE Kubernetes cluster
  kill_chain_phases:
  - Exploitation
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  security_domain: threat
  confidence: 50
  impact: 50
  risk_score: 25
  context:
  - Unknown
  message: tbd
  observable:
  - name: field
    type: Unknown
    role:
    - Unknown
