name: Applying Stolen Credentials via Mimikatz modules
id: 759a653f-cb92-40f9-94c9-ec4e47b0f709
version: 2
date: '2021-11-24'
author: Stanislav Miskovic, Splunk
type: TTP
datamodel:
- Endpoint_Processes
description: The following analytic identifites the use of Mimikatz modules attempting
  to perform Pass-the-Ticket, Golden or Silver Kerberos ticket attacks and Skeleton
  Key attack. This behavior is typically performed within interactive Mimikatz memory
  space, however it may be identified on the command-line. A Pass-the-Ticket (ptt)
  attack is performed once an adversary has established access to a single endpoint
  and retrieved the kerberos ticket to now begin moving laterally using this method.
  Typically, it blends in with logon activity as the ticket can be copied to another
  system and passed into the current session effectively simulating a logon without
  any communication with the Domain Controller. A Golden or Silver ticket attack requires
  some setup by the adversary, but once performed it will simulate lateral based authentication
  to additional endpoints.
search: '| from read_ssa_enriched_events() | eval timestamp=parse_long(ucast(map_get(input_event,
  "_time"), "string", null)), cmd_line=ucast(map_get(input_event, "process"), "string",
  null), event_id=ucast(map_get(input_event, "event_id"), "string", null) | where
  cmd_line != null AND ( match_regex(cmd_line, /(?i)kerberos::ptt/)=true OR match_regex(cmd_line,
  /(?i)kerberos::golden/)=true OR match_regex(cmd_line, /(?i)kerberos::silver/)=true
  OR match_regex(cmd_line, /(?i)misc::skeleton/)=true ) | eval start_time = timestamp,
  end_time = timestamp, entities = mvappend( ucast(map_get(input_event, "dest_user_id"),
  "string", null), ucast(map_get(input_event, "dest_device_id"), "string", null)),
  body=create_map(["event_id", event_id, "cmd_line", cmd_line]) | into write_ssa_detected_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: None identified as this is strictly identifying known command-line
  attributes related to Mimikatz.
references:
- https://github.com/gentilkiwi/mimikatz
- https://adsecurity.org/?p=1275
- https://adsecurity.org/?p=1515
- https://adsecurity.org/?page_id=1821#KERBEROSPTT
- https://attack.mitre.org/software/S0002/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1550.002/T1550.002.md#atomic-test-1---mimikatz-pass-the-hash
tags:
  analytic_story:
  - Credential Dumping
  asset_type: Windows
  cis20:
  - CIS 16
  - CIS 20
  confidence: 100
  context:
  - Source:AD
  - Source:Endpoint
  - Stage:Credential Access
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1555/applying_stolen_credentials/logAllMimikatzModules.log
  impact: 90
  kill_chain_phases:
  - Actions on Objectives
  message: Mimikatz malware is violating authentication processes by injecting golden
    or silver Kerberos tickets or passing stolen authentication tokens. Operation
    is performed at the device $dest_device_id$, by the account $dest_user_id$ via
    command $cmd_line$
  mitre_attack_id:
  - T1055
  - T1068
  - T1078
  - T1098
  - T1134
  - T1543
  - T1547
  - T1548
  - T1554
  - T1556
  - T1558
  - T1558.002
  - T1558.001
  - T1003
  - T1003.001
  nist:
  - PR.AC
  - PR.IP
  observable:
  - name: dest_user_id
    type: User
    role:
    - Actor
  - name: dest_device_id
    type: Hostname
    role:
    - Victim
  - name: cmd_line
    type: processname
    role:
    - Others
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - dest_device_id
  - dest_user_id
  - process
  - _time
  - cmd_line
  risk_score: 90
  risk_severity: high
  security_domain: endpoint
