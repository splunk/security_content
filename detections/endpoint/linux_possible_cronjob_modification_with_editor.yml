name: Linux Possible Cronjob Modification With Editor
id: dcc89bde-5f24-11ec-87ca-acde48001122
version: 1
date: '2021-12-17'
author: Teoderick Contreras, Splunk
status: production
type: Hunting
description: 'The following analytic detects potential unauthorized modifications
  to Linux cronjobs using text editors like "nano", "vi" or "vim". It identifies this
  behavior by tracking command-line executions that interact with paths related to
  cronjob configuration, a common Linux scheduling utility. Cronjob files may be manipulated
  by attackers for privilege escalation or persistent access, making such changes
  critical to monitor.\ The identified behavior is significant for a Security Operations
  Center (SOC) as it could indicate an ongoing attempt at establishing persistent
  access or privilege escalation, leading to data breaches, system compromise, or
  other malicious activities.

  In case of a true positive, the impact could be severe. An attacker with escalated
  privileges or persistent access could carry out damaging actions, such as data theft,
  sabotage, or further network penetration.

  To implement this analytic, ensure ingestion of logs tracking process name, parent
  process, and command-line executions from your endpoints. Utilize the Add-on for
  Linux Sysmon from Splunkbase if you''re using Sysmon.

  Known false positives include legitimate administrative tasks, as these commands
  may also be used for benign purposes. Careful tuning and filtering based on known
  benign activity in your environment can minimize these instances.'
data_source:
- Sysmon for Linux EventID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where (Processes.process_name IN("nano","vim.basic")
  OR Processes.process IN ("*nano *", "*vi *", "*vim *")) AND Processes.process IN("*/etc/cron*",
  "*/var/spool/cron/*", "*/etc/anacrontab*") by Processes.dest Processes.user Processes.parent_process_name
  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `linux_possible_cronjob_modification_with_editor_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this commandline
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://attack.mitre.org/techniques/T1053/003/
tags:
  analytic_story:
  - Linux Privilege Escalation
  - Linux Persistence Techniques
  - Linux Living Off The Land
  - Scheduled Tasks
  asset_type: Endpoint
  confidence: 30
  impact: 20
  message: A commandline $process$ that may modify cronjob file using editor in $dest$
  mitre_attack_id:
  - T1053.003
  - T1053
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_id
  risk_score: 6
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1053.003/cronjobs_entry/sysmon_linux.log
    source: Syslog:Linux-Sysmon/Operational
    sourcetype: sysmon_linux
