name: System Info Gathering Using Dxdiag Application
id: f92d74f2-4921-11ec-b685-acde48001122
version: 1
date: '2021-11-19'
author: Teoderick Contreras, Splunk
status: production
type: Hunting
description: This analytic is to detect a suspicious dxdiag.exe process command-line
  execution. Dxdiag is used to collect the system info of the target host. This technique
  has been used by Remcos RATS, various actors, and other malware to collect information
  as part of the recon or collection phase of an attack. This behavior should rarely
  be seen in a corporate network, but this command line can be used by a network administrator
  to audit host machine specifications. Thus in some rare cases, this detection will
  contain false positives in its results. To triage further, analyze what commands
  were passed after it pipes out the result to a file for further processing.
data_source:
- Sysmon EventID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where `process_dxdiag` AND Processes.process
  = "* /t *" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process
  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `system_info_gathering_using_dxdiag_application_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: This commandline can be used by a network administrator to
  audit host machine specifications. Thus, a filter is needed.
references:
- https://app.any.run/tasks/df0baf9f-8baf-4c32-a452-16562ecb19be/
tags:
  analytic_story:
  - Remcos
  asset_type: Endpoint
  confidence: 50
  impact: 50
  message: dxdiag.exe process with commandline $process$ on $dest$
  mitre_attack_id:
  - T1592
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  risk_score: 25
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/t1592/host_info_dxdiag/sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
