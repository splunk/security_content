name: Detect Rundll32 Application Control Bypass - syssetup
id: 71b9bf37-cde1-45fb-b899-1b0aa6fa1183
version: 2
date: '2021-02-04'
author: Michael Haag, Splunk
status: production
type: TTP
description: The following analytic identifies rundll32.exe loading syssetup.dll by
  calling the LaunchINFSection function on the command line. This particular technique
  will load script code from a file. Upon a successful execution, the following module
  loads may occur - clr.dll, jscript.dll and scrobj.dll. During investigation, identify
  script content origination. Generally, a child process will spawn from rundll32.exe,
  but that may be bypassed based on script code contents. Rundll32.exe is natively
  found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, review
  any network connections and obtain the script content executed. It's possible other
  files are on disk.
data_source:
- Sysmon Event ID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*syssetup*
  by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name
  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `detect_rundll32_application_control_bypass___syssetup_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Although unlikely, some legitimate applications may use syssetup.dll,
  triggering a false positive.
references:
- https://attack.mitre.org/techniques/T1218/011/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md
- https://lolbas-project.github.io/lolbas/Binaries/Rundll32/
- https://lolbas-project.github.io/lolbas/Libraries/Syssetup/
- https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/
tags:
  analytic_story:
  - Suspicious Rundll32 Activity
  - Living Off The Land
  asset_type: Endpoint
  confidence: 100
  impact: 80
  message: An instance of $parent_process_name$ spawning $process_name$ loading syssetup.dll
    by calling the LaunchINFSection function on the command line was identified on
    endpoint $dest$ by user $user$.
  mitre_attack_id:
  - T1218
  - T1218.011
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: parent_process_name
    type: Process
    role:
    - Parent Process
  - name: process_name
    type: Process
    role:
    - Child Process
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  risk_score: 80
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.011/atomic_red_team/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
