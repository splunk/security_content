name: First time seen command line argument - SSA
id: fc0edc95-ff2b-48b0-9f6f-63da3789fd23
version: 1
date: '2020-6-25'
description: "This search looks for command-line arguments that use a `/c` parameter
  to execute a command that has not previously been seen. 
This is an implementation on SPL2 of the rule `First time seen command line argument` by @bpatel."
how_to_implement: "You must be populating the endpoint data model for SSA and specifically the process_name and the process fields"
author: Ignacio Bermudez Corrales, Splunk
type: SSA
search: '| from read_ssa_enriched_events()
| eval timestamp=parse_long(ucast(map_get(input_event, "_time"), "string", null))
| eval dest_user_id=ucast(map_get(input_event, "dest_user_id"), "string", null),
       dest_device_id=ucast(map_get(input_event, "dest_device_id"), "string", null),
       process_name=ucast(map_get(input_event, "process_name"), "string", null),
       cmd_line=lower(ucast(map_get(input_event, "process"), "string", null))
| where process_name="cmd.exe" AND
        match_regex(ucast(cmd_line, "string", ""), /.* \/[cC] .*/)=true
| select cmd_line, timestamp, dest_device_id, dest_user_id
| first_time_event input_columns=["cmd_line"]
| where first_time_cmd_line
| eval start_time = timestamp,
       end_time = timestamp,
       entities = mvappend(dest_device_id, dest_user_id),
       body = "TBD"
| into write_ssa_detected_events();'
eli5: "The subsearch returns all events where `cmd.exe` was used with a `/c` parameter
  in the command-line arguments to execute other commands/programs. It appends the
  historical data to those results in the lookup file. Next, it recalculates the `firstTime`
  and `lastTime` field for command-line execution and outputs this data to the lookup
  file to update the local cache. It returns only those events that have first been
  seen in the past one hour. This is combined with the main search to return the time,
  user, destination, process, parent process, and value of the command-line argument."
known_false_positives: "Legitimate programs can also use command-line arguments to
  execute. Please verify the command-line arguments to check what command/program
  is being executed. We recommend customizing the `first_time_seen_cmd_line_filter` macro to exclude legitimate parent_process_name"
tags:
  cis20:
    - CIS 3
    - CIS 8
  kill_chain_phases:
    - Command and Control
    - Actions on Objectives
  mitre_attack:
    - Execution
    - Scripting
    - Persistence
    - Command-Line Interface
  mitre_technique_id:
    - T1059
    - T1117
    - T1202
  nist:
    - PR.PT
    - DE.CM
    - PR.IP
  risk_severity: low
  security_domain: endpoint
  required_fields:
    - process_name
    - _time
    - dest_device_id
    - dest_user_id
    - process