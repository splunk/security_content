name: Linux Service Restarted
id: 084275ba-61b8-11ec-8d64-acde48001122
version: 1
date: '2023-04-14'
author: Teoderick Contreras, Splunk
status: production
type: Anomaly
description: 'The following analytic detects the restarting or re-enabling of services
  in the Linux platform. It focuses on the use of the systemctl or service tools for
  executing these actions. Adversaries may leverage this technique to repeatedly execute
  malicious payloads as a form of persistence. Linux hosts typically start services
  during boot to perform background system functions. However, administrators may
  also create legitimate services for specific tools or applications as part of task
  automation. In such cases, it is recommended to verify the service path of the registered
  script or executable and identify the creator of the service for further validation.\

  It''s important to be aware that this analytic may generate false positives as administrators
  or network operators may use the same command-line for legitimate automation purposes.
  Filter macros should be updated accordingly to minimize false positives.\

  Identifying restarted or re-enabled services is valuable for a SOC as it can indicate
  potential malicious activities attempting to maintain persistence or execute unauthorized
  actions on Linux systems. By detecting and investigating these events, security
  analysts can respond promptly to mitigate risks and prevent further compromise.
  The impact of a true positive can range from unauthorized access to data destruction
  or other damaging outcomes.'
data_source:
- Sysmon Event ID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where (Processes.process_name IN ("systemctl",
  "service") OR Processes.process IN ("*systemctl *", "*service *")) Processes.process
  IN ("*restart*", "*reload*", "*reenable*") by Processes.dest Processes.user Processes.parent_process_name
  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id
  Processes.process_guid | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `linux_service_restarted_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this commandline
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://attack.mitre.org/techniques/T1543/003/
tags:
  analytic_story:
  - AwfulShred
  - Linux Privilege Escalation
  - Linux Living Off The Land
  - Data Destruction
  - Linux Persistence Techniques
  - Scheduled Tasks
  asset_type: Endpoint
  confidence: 50
  impact: 50
  message: A commandline $process$ that may create or start a service on $dest$
  mitre_attack_id:
  - T1053.006
  - T1053
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_id
  risk_score: 25
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1053.006/service_systemd/sysmon_linux.log
    source: Syslog:Linux-Sysmon/Operational
    sourcetype: sysmon_linux
