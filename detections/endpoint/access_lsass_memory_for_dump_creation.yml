name: Access LSASS Memory for Dump Creation
id: fb4c31b0-13e8-4155-8aa5-24de4b8d6717
version: 2
date: '2019-12-06'
author: Patrick Bareiss, Splunk
status: production
type: TTP
description: The following analytic is designed to detect potentially malicious activities involving the Local Security Authority Subsystem Service (LSASS) process. Specifically, it identifies when the LSASS process memory is being dumped, an action often associated with credential dumping attacks. This analytic leverages Sysmon logs, particularly those with EventCode 10 related to lsass.exe. It searches for indicators of LSASS memory dumping, such as specific call traces to dbgcore.dll and dbghelp.dll. While memory dumps can be legitimate administrative tasks, LSASS memory dumps are typically unusual and warrant investigation. To implement this analytic, ensure your Sysmon setup includes EventCode 10 logging for lsass.exe and customize the provided macros (sysmon and post-filter macro) to match your specific Splunk environment configuration.
data_source:
- Sysmon Event ID 1
search: '`sysmon` EventCode=10 TargetImage=*lsass.exe CallTrace=*dbgcore.dll* OR CallTrace=*dbghelp.dll*
  | stats count min(_time) as firstTime max(_time) as lastTime by dest, TargetImage,
  TargetProcessId, SourceImage, SourceProcessId  | `security_content_ctime(firstTime)`|
  `security_content_ctime(lastTime)` | `access_lsass_memory_for_dump_creation_filter` '
how_to_implement: This search requires Sysmon Logs and a Sysmon configuration, which
  includes EventCode 10 for lsass.exe. This search uses an input macro named `sysmon`.
  We strongly recommend that you specify your environment-specific configurations
  (index, source, sourcetype, etc.) for Windows Sysmon logs. Replace the macro definition
  with configurations for your Splunk environment. The search also uses a post-filter
  macro designed to filter out known false positives.
known_false_positives: Administrators can create memory dumps for debugging purposes,
  but memory dumps of the LSASS process would be unusual.
references:
- https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf
tags:
  analytic_story:
  - Credential Dumping
  asset_type: Windows
  confidence: 90
  impact: 70
  message: process $SourceImage$ injected into $TargetImage$ and was attempted dump
    LSASS on $dest$. Adversaries tend to do this when trying to accesss credential
    material stored in the process memory of the Local Security Authority Subsystem
    Service (LSASS).
  mitre_attack_id:
  - T1003.001
  - T1003
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: TargetImage
    type: Process
    role:
    - Target
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - EventCode
  - TargetImage
  - CallTrace
  - dest
  - TargetProcessId
  - SourceImage
  - SourceProcessId
  risk_score: 63
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
