name: Account Discovery With Net App
id: 339805ce-ac30-11eb-b87d-acde48001122
version: 4
date: '2023-01-04'
author: Teoderick Contreras, Splunk, TheLawsOfChaos, Github Community
status: production
type: TTP
description: This search is to detect a potential account discovery series of command
  used by several malware or attack to recon the target machine. This technique is
  also seen in some note worthy malware like trickbot where it runs a cmd process,
  or even drop its module that will execute the said series of net command. This series
  of command are good correlation search and indicator of attacker recon if seen in
  the machines within a none technical user or department (HR, finance, ceo and etc)
  network.
data_source:
- Sysmon EventID 1
search: '| tstats `security_content_summariesonly` values(Processes.process) as process
  values(Processes.parent_process) as parent_process values(Processes.process_id)
  as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes
  where `process_net` AND (Processes.process="* user *" OR  Processes.process="*config*"
  OR Processes.process="*view /all*") by  Processes.process_name Processes.dest Processes.user
  Processes.parent_process_name | where count >=4 | `drop_dm_object_name(Processes)`
  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `account_discovery_with_net_app_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Admin or power user may used this series of command.
references:
- https://labs.vipre.com/trickbot-and-its-modules/
- https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/
- https://app.any.run/tasks/48414a33-3d66-4a46-afe5-c2003bb55ccf/
tags:
  analytic_story:
  - Trickbot
  - IcedID
  asset_type: Endpoint
  confidence: 50
  impact: 10
  message: Suspicious $process_name$ usage detected on endpoint $dest$ by user $user$.
  mitre_attack_id:
  - T1087.002
  - T1087
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: process_name
    type: Process Name
    role:
    - Child Process
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  risk_score: 5
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/trickbot/infection/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
