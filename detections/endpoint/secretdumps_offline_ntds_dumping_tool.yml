name: SecretDumps Offline NTDS Dumping Tool
id: 5672819c-be09-11eb-bbfb-acde48001122
version: 2
date: '2024-05-20'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: The following analytic detects the potential use of the secretsdump.py
  tool to dump NTLM hashes from a copy of ntds.dit and the SAM, SYSTEM, and SECURITY
  registry hives. It leverages data from Endpoint Detection and Response (EDR) agents,
  focusing on specific command-line patterns and process names associated with secretsdump.py.
  This activity is significant because it indicates an attempt to extract sensitive
  credential information offline, which is a common post-exploitation technique. If
  confirmed malicious, this could allow an attacker to obtain NTLM hashes, facilitating
  further lateral movement and potential privilege escalation within the network.
data_source:
- Sysmon EventID 1
- Windows Event Log Security 4688
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.process_name = "python*.exe"
  Processes.process = "*.py*" Processes.process = "*-ntds*" (Processes.process = "*-system*"
  OR Processes.process = "*-sam*" OR Processes.process = "*-security*" OR Processes.process
  = "*-bootkey*") by Processes.process_name Processes.process Processes.parent_process_name
  Processes.parent_process Processes.dest Processes.user Processes.process_id Processes.process_guid
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `secretdumps_offline_ntds_dumping_tool_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: unknown
references:
- https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py
tags:
  analytic_story:
  - Credential Dumping
  - Graceful Wipe Out Attack
  - Rhysida Ransomware
  asset_type: Endpoint
  confidence: 100
  impact: 80
  message: A secretdump process $process_name$ with secretdump commandline $process$
    to dump credentials in host $dest$
  mitre_attack_id:
  - T1003.003
  - T1003
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.process_name
  - Processes.process
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.dest
  - Processes.user
  - Processes.process_id
  - Processes.process_guid
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/honeypots/casper/datasets1/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
