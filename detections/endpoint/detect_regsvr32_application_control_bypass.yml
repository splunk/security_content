name: Detect Regsvr32 Application Control Bypass
id: 070e9b80-6252-11eb-ae93-0242ac130002
version: 4
date: '2024-08-14'
author: Michael Haag, Splunk
status: production
type: TTP
description: 'The following analytic identifies the abuse of Regsvr32.exe to proxy
  execution of malicious code, specifically detecting the loading of "scrobj.dll"
  by Regsvr32.exe. This detection leverages data from Endpoint Detection and Response
  (EDR) agents, focusing on process creation events and command-line executions. This
  activity is significant because Regsvr32.exe is a trusted, signed Microsoft binary,
  often used in "Squiblydoo" attacks to bypass application control mechanisms. If
  confirmed malicious, this technique could allow an attacker to execute arbitrary
  code, potentially leading to system compromise and persistent access.'
data_source:
- Sysmon EventID 1
- Windows Event Log Security 4688
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where `process_regsvr32` Processes.process=*scrobj*
  by Processes.dest Processes.user Processes.parent_process Processes.process_name
  Processes.parent_process_name Processes.process Processes.original_file_name Processes.process_id
  Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`|
  `security_content_ctime(lastTime)` | `detect_regsvr32_application_control_bypass_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Limited false positives related to third party software registering
  .DLL's.
references:
- https://attack.mitre.org/techniques/T1218/010/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.010/T1218.010.md
- https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/
- https://support.microsoft.com/en-us/topic/how-to-use-the-regsvr32-tool-and-troubleshoot-regsvr32-error-messages-a98d960a-7392-e6fe-d90a-3f4e0cb543e5
tags:
  analytic_story:
  - Living Off The Land
  - Cobalt Strike
  - BlackByte Ransomware
  - Graceful Wipe Out Attack
  - Suspicious Regsvr32 Activity
  asset_type: Endpoint
  confidence: 100
  impact: 80
  message: An instance of $parent_process_name$ spawning $process_name$ in an attempt
    to bypass detection and preventative controls was identified on endpoint $dest$
    by user $user$.
  mitre_attack_id:
  - T1218
  - T1218.010
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: parent_process_name
    type: Process
    role:
    - Attacker
  - name: process_name
    type: Process
    role:
    - Attacker
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.010/atomic_red_team/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
