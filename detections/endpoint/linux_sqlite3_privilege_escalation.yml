name: Linux Sqlite3 Privilege Escalation
id: ab75dbb7-c3ba-4689-9c1b-8d2717bdcba1
version: 3
date: '2024-08-14'
author: Gowthamaraj Rajendran, Splunk
status: production
type: Anomaly
description: The following analytic detects the execution of the sqlite3 command with
  elevated privileges, which can be exploited for privilege escalation. It leverages
  Endpoint Detection and Response (EDR) telemetry to identify instances where sqlite3
  is used in conjunction with shell commands and sudo. This activity is significant
  because it indicates a potential attempt to gain root access, which could lead to
  full system compromise. If confirmed malicious, an attacker could execute arbitrary
  commands as root, leading to unauthorized access, data exfiltration, or further
  lateral movement within the network.
data_source:
- Sysmon for Linux EventID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.process="*sqlite3*"
  AND Processes.process="*.shell*" AND Processes.process="*sudo*" by Processes.dest
  Processes.user Processes.parent_process_name Processes.process_name Processes.process
  Processes.process_id Processes.parent_process_id Processes.process_guid | `drop_dm_object_name(Processes)`
  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `linux_sqlite3_privilege_escalation_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: False positives may be present, filter as needed.
references:
- https://gtfobins.github.io/gtfobins/sqlite3/
- https://manpages.ubuntu.com/manpages/trusty/en/man1/sqlite3.1.html
tags:
  analytic_story:
  - Linux Privilege Escalation
  - Linux Living Off The Land
  asset_type: Endpoint
  confidence: 50
  impact: 60
  message: An instance of $parent_process_name$ spawning $process_name$ was identified
    on endpoint $dest$
  mitre_attack_id:
  - T1548.003
  - T1548
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: parent_process_name
    type: Process
    role:
    - Attacker
  - name: process_name
    type: Process
    role:
    - Attacker
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_id
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1548/sqlite3/sysmon_linux.log
    source: Syslog:Linux-Sysmon/Operational
    sourcetype: sysmon:linux
