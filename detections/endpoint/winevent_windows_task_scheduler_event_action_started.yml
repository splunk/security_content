name: WinEvent Windows Task Scheduler Event Action Started
id: b3632472-310b-11ec-9aab-acde48001122
version: 2
date: '2024-04-26'
author: Michael Haag, Splunk
status: production
type: Hunting
description: The following hunting analytic aims to identify suspicious tasks that have been registered and executed in Windows using EventID 200 (action run) and 201 (action completed) from the Windows Task Scheduler logs. This analytic helps detect evasive techniques used to register tasks on Windows systems. It is recommended to filter the results based on the ActionName field by specifying specific paths that are not commonly used in your environment.

  After implementing this analytic, it is important to review parallel events related to the scheduled tasks. EventID 106 will be generated when a new task is created, but it does not necessarily mean that the task has been executed. Analysts should capture any files on disk associated with the task and perform further analysis.

  To implement this analytic, Task Scheduler logs must be collected. This can be done by adding a stanza for [WinEventLog://Microsoft-Windows-TaskScheduler/Operational] in the inputs.conf file and setting renderXml=false. It is worth noting that not translating the logs into XML may require specific extraction of items from the Message field.

  False positives are expected with this analytic, so it is important to filter the results based on the paths or specific keywords of interest in the ActionName field to reduce noise.

  Identifying and analyzing scheduled tasks that have been executed is crucial for a Security Operations Center (SOC) as it helps detect potentially malicious or unauthorized activities on Windows systems. By capturing and investigating the associated events, analysts can uncover signs of persistence mechanisms, unauthorized code execution, or suspicious behaviors. The impact of a true positive could range from unauthorized access to data exfiltration or the execution of malicious payloads.
data_source: []
search: '`wineventlog_task_scheduler` EventCode IN ("200","201")  | stats count min(_time) as firstTime max(_time) as lastTime by TaskName
  dest EventCode | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `winevent_windows_task_scheduler_event_action_started_filter`'
how_to_implement: Task Scheduler logs are required to be collected. Enable logging
  with inputs.conf by adding a stanza for [WinEventLog://Microsoft-Windows-TaskScheduler/Operational]
  and renderXml=false. Note, not translating it in XML may require a proper extraction
  of specific items in the Message.
known_false_positives: False positives will be present. Filter based on ActionName
  paths or specify keywords of interest.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053.005/T1053.005.md
- https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/
tags:
  analytic_story:
  - Qakbot
  - Windows Persistence Techniques
  - Winter Vivern
  - Prestige Ransomware
  - DarkCrystal RAT
  - AsyncRAT
  - Winter Vivern
  - IcedID
  - CISA AA22-257A
  - Industroyer2
  - Sandworm Tools
  - Data Destruction
  - Amadey
  - Scheduled Tasks
  asset_type: Endpoint
  confidence: 100
  impact: 80
  message: A Scheduled Task was scheduled and ran on $dest$.
  mitre_attack_id:
  - T1053.005
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - TaskName
  - ActionName
  - EventID
  - dest
  - ProcessID
  risk_score: 80
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1053.005/winevent_windows_task_scheduler_event_action_started/windows-xml.log
    source: XmlWinEventLog:Security
    sourcetype: XmlWinEventLog
