name: Detect Credential Dumping through LSASS access
id: 2c365e57-4414-4540-8dc0-73ab10729996
version: 3
date: '2019-12-03'
author: Patrick Bareiss, Splunk
status: production
type: TTP
description: |-
  The following analytic detects the reading of lsass memory, which is consistent with credential dumping. Reading lsass memory is a common technique used by attackers to steal credentials from the Windows operating system. The detection is made by monitoring the sysmon events and filtering for specific access permissions (0x1010 and 0x1410) on the lsass.exe process helps identify potential instances of credential dumping.The detection is important because it suggests that an attacker is attempting to extract credentials from the lsass memory, which can lead to unauthorized access, data breaches, and compromise of sensitive information. Credential dumping is often a precursor to further attacks, such as lateral movement, privilege escalation, or data exfiltration. False positives can occur due to legitimate actions that involve accessing lsass memory. Therefore, extensive triage and investigation are necessary to differentiate between malicious and benign activities.
data_source:
- Sysmon Event ID 1
search: '`sysmon` EventCode=10 TargetImage=*lsass.exe (GrantedAccess=0x1010 OR GrantedAccess=0x1410)
  | stats count min(_time) as firstTime max(_time) as lastTime by dest, SourceImage,
  SourceProcessId, TargetImage, TargetProcessId, EventCode, GrantedAccess | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`
  | `detect_credential_dumping_through_lsass_access_filter` '
how_to_implement: This search needs Sysmon Logs and a sysmon configuration, which
  includes EventCode 10 with lsass.exe. This search uses an input macro named `sysmon`.
  We strongly recommend that you specify your environment-specific configurations
  (index, source, sourcetype, etc.) for Windows Sysmon logs. Replace the macro definition
  with configurations for your Splunk environment. The search also uses a post-filter
  macro designed to filter out known false positives.
known_false_positives: The activity may be legitimate. Other tools can access lsass
  for legitimate reasons, and it's possible this event could be generated in those
  cases. In these cases, false positives should be fairly obvious and you may need
  to tweak the search to eliminate noise.
references: []
tags:
  analytic_story:
  - Credential Dumping
  - Detect Zerologon Attack
  asset_type: Windows
  confidence: 100
  impact: 80
  message: The $SourceImage$ has attempted access to read $TargetImage$ was identified
    on endpoint $dest$, this is indicative of credential dumping and should be
    investigated.
  mitre_attack_id:
  - T1003.001
  - T1003
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: TargetImage
    type: Other
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - EventCode
  - TargetImage
  - GrantedAccess
  - dest
  - SourceImage
  - SourceProcessId
  - TargetImage
  - TargetProcessId
  risk_score: 80
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
