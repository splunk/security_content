name: Detect Regasm with no Command Line Arguments
id: c3bc1430-04e7-4178-835f-047d8e6e97df
version: 2
date: '2021-09-20'
author: Michael Haag, Splunk
type: TTP
datamodel:
  - Endpoint
description: The following analytic identifies regasm.exe with no command line arguments.
  This particular behavior occurs when another process injects into regasm.exe, no
  command line arguments will be present. During investigation, identify any network
  connections and parallel processes. Identify any suspicious module loads related
  to credential dumping or file writes. Regasm.exe are natively found in C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe
  and C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe.
search: '| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes
  where `process_regasm` by _time span=1h  Processes.process_id Processes.process_name
  Processes.dest Processes.process_path Processes.process Processes.parent_process_name
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | regex process="(regasm\.exe.{0,4}$)" | `detect_regasm_with_no_command_line_arguments_filter`'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Processes` node. In addition,
  confirm the latest CIM App 4.20 or higher is installed and the latest TA for the
  endpoint product.
known_false_positives: Although unlikely, limited instances of regasm.exe or may cause
  a false positive. Filter based endpoint usage, command line arguments, or process
  lineage.
references:
- https://attack.mitre.org/techniques/T1218/009/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.009/T1218.009.md
- https://lolbas-project.github.io/lolbas/Binaries/Regasm/
tags:
  analytic_story:
  - Suspicious Regsvcs Regasm Activity
  asset_type: Endpoint
  automated_detection_testing: passed
  cis20:
  - CIS 8
  confidence: 70
  context:
  - Source:Endpoint
  - Stage:Defense Evasion
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.009/atomic_red_team/windows-sysmon.log
  impact: 70
  kill_chain_phases:
  - Actions on Objectives
  message: The process $process_name$ was spawned by $parent_process_name$ without any command-line
    arguments on $dest$ by $user$.
  mitre_attack_id:
  - T1218.009
  nist:
  - PR.PT
  - DE.CM
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: parent_process_name
    type: Parent Process
    role:
    - Parent Process
  - name: process_name
    type: Process
    role:
    - Child Process
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name #parent process name
  - Processes.parent_process #parent cmdline
  - Processes.original_file_name
  - Processes.process_name #process name
  - Processes.process #process cmdline
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  risk_score: 49
  security_domain: endpoint
