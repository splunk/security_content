name: Detect SharpHound Usage
id: dd04b29a-beed-11eb-87bc-acde48001122
version: 3
date: '2024-03-14'
author: Michael Haag, Splunk
status: production
type: TTP
description: The following analytic identifies SharpHound binary usage by using the
  original filena,e. In addition to renaming the PE, other coverage is available to
  detect command-line arguments. This particular analytic looks for the original_file_name
  of `SharpHound.exe` and the process name. It is possible older instances of SharpHound.exe
  have different original filenames. Dependent upon the operator, the code may be
  re-compiled and the attributes removed or changed to anything else. During triage,
  review the metadata of the binary in question. Review parallel processes for suspicious
  behavior. Identify the source of this binary.
data_source:
- Sysmon Event ID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=sharphound.exe
  OR Processes.original_file_name=SharpHound.exe) by Processes.dest Processes.user
  Processes.parent_process_name Processes.original_file_name Processes.process_name
  Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)`
  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `detect_sharphound_usage_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: False positives should be limited as this is specific to a
  file attribute not used by anything else. Filter as needed.
references:
- https://attack.mitre.org/software/S0521/
- https://thedfirreport.com/?s=bloodhound
- https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors
- https://github.com/BloodHoundAD/SharpHound3
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md#atomic-test-2---run-bloodhound-from-local-disk
tags:
  analytic_story:
  - Windows Discovery Techniques
  - Ransomware
  asset_type: Endpoint
  confidence: 80
  impact: 30
  message: Potential SharpHound binary identified on $dest$
  mitre_attack_id:
  - T1087.002
  - T1069.001
  - T1482
  - T1087.001
  - T1087
  - T1069.002
  - T1069
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  risk_score: 24
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1059.001/sharphound/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
