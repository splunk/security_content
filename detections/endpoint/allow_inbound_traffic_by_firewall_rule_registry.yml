name: Allow Inbound Traffic By Firewall Rule Registry
id: 0a46537c-be02-11eb-92ca-acde48001122
version: 3
date: '2022-07-19'
author: Teoderick Contreras, Splunk
type: TTP
datamodel:
- Endpoint
description: This analytic detects a potential suspicious modification of firewall
  rule registry allowing inbound traffic in specific port with public profile. This
  technique was identified when an adversary wants to grant remote access to a machine
  by allowing the traffic in a firewall rule.
search: '| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry
  where Registry.registry_path= "*\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\FirewallRules\\*"
  Registry.registry_value_data = "*|Action=Allow|*" Registry.registry_value_data =
  "*|Dir=In|*"  Registry.registry_value_data = "*|LPort=*" by _time span=1h Registry.dest
  Registry.user Registry.registry_path Registry.registry_value_name Registry.process_guid
  Registry.registry_key_name Registry.registry_value_data | `drop_dm_object_name(Registry)`
  |rename process_guid as proc_guid |join proc_guid, _time [| tstats `security_content_summariesonly`
  count FROM datamodel=Endpoint.Processes by _time span=1h Processes.process_id Processes.process_name
  Processes.process Processes.dest Processes.parent_process_name Processes.parent_process
  Processes.process_guid | `drop_dm_object_name(Processes)` |rename process_guid as
  proc_guid | fields _time dest user parent_process_name parent_process process_name
  process_path process proc_guid registry_path registry_value_name registry_value_data
  registry_key_name] | table _time dest user parent_process_name parent_process process_name
  process_path process proc_guid registry_path registry_value_name registry_value_data
  registry_key_name | `allow_inbound_traffic_by_firewall_rule_registry_filter`'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Registry` node. Also make sure
  that this registry was included in your config files ex. sysmon config to be monitored.
known_false_positives: network admin may add/remove/modify public inbound firewall
  rule that may cause this rule to be triggered.
references:
- https://docs.microsoft.com/en-us/powershell/module/netsecurity/new-netfirewallrule?view=windowsserver2019-ps
tags:
  analytic_story:
  - Prohibited Traffic Allowed or Protocol Mismatch
  - Windows Registry Abuse
  - Azorult
  confidence: 50
  context:
  - Source:Endpoint
  - Stage:Lateral Movement
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/honeypots/casper/datasets1/windows-sysmon.log
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/azorult/sysmon.log
  impact: 50
  kill_chain_phases:
  - Exploitation
  message: Suspicious firewall allow rule modifications were detected via the registry
    on endpoint $dest$ by user $user$.
  mitre_attack_id:
  - T1021.001
  - T1021
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Registry.registry_path
  - Registry.registry_value_name
  - Registry.registry_key_name
  - Registry.registry_value_data
  - Registry.action
  - Registry.dest
  - Registry.user
  risk_score: 25
  security_domain: endpoint
  asset_type: Endpoint
