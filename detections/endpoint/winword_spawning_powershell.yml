name: Winword Spawning PowerShell
id: b2c950b8-9be2-11eb-8658-acde48001122
version: 2
date: '2021-04-12'
author: Michael Haag, Splunk
status: production
type: TTP
description: The following detection identifies Microsoft Word spawning PowerShell.
  Typically, this is not common behavior and not default with winword.exe. Winword.exe
  will generally be found in the following path `C:\Program Files\Microsoft Office\root\Office16`
  (version will vary). PowerShell spawning from winword.exe is common for a spearphishing
  attachment and is actively used. Albeit, the command executed will most likely be
  encoded and captured via another detection. During triage, review parallel processes
  and identify any files that may have been written.
data_source:
- Sysmon EventID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name="winword.exe"
  `process_powershell` by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name
  Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`
  | `winword_spawning_powershell_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: False positives should be limited, but if any are present,
  filter as needed.
references:
- https://redcanary.com/threat-detection-report/techniques/powershell/
- https://attack.mitre.org/techniques/T1566/001/
- https://app.any.run/tasks/b79fa381-f35c-4b3e-8d02-507e7ee7342f/
- https://app.any.run/tasks/181ac90b-0898-4631-8701-b778a30610ad/
tags:
  analytic_story:
  - Spearphishing Attachments
  - DarkCrystal RAT
  - CVE-2023-21716 Word RTF Heap Corruption
  asset_type: Endpoint
  confidence: 100
  impact: 70
  message: '$parent_process_name$ on $dest$ by $user$ launched the following powershell
    process: $process_name$ which is very common in spearphishing attacks'
  mitre_attack_id:
  - T1566
  - T1566.001
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  - name: process_name
    type: Process
    role:
    - Target
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  risk_score: 70
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1566.001/macro/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
