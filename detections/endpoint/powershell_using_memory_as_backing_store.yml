name: Powershell Using memory As Backing Store
id: c396a0c4-c9f2-11eb-b4f5-acde48001122
version: 2
date: '2023-04-14'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: The following analytic identifies suspicious PowerShell script execution
  via EventCode 4104 that is using memory stream as new object backstore. The malicious
  PowerShell script will contain stream flate data and will be decompressed in memory
  to run or drop the actual payload. During triage, review parallel processes within
  the same timeframe. Review the full script block to identify other related artifacts.
data_source:
- Powershell 4104
search: '`powershell` EventCode=4104 ScriptBlockText = *New-Object* ScriptBlockText
  = *IO.MemoryStream* | stats count min(_time) as firstTime max(_time) as lastTime
  by EventCode ScriptBlockText Computer UserID | rename Computer as dest | rename UserID as user | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `powershell_using_memory_as_backing_store_filter`'
how_to_implement: To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
known_false_positives: powershell may used this function to store out object into
  memory.
references:
- https://web.archive.org/web/20201112031711/https://www.carbonblack.com/blog/decoding-malicious-powershell-streams/
- https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
- https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63
- https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf
- https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/
- https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/
tags:
  analytic_story:
  - Malicious PowerShell
  - Hermetic Wiper
  - Data Destruction
  - IcedID
  asset_type: Endpoint
  confidence: 80
  impact: 50
  message: A PowerShell script contains memorystream command in $ScriptBlockText$
    as new object backstore with EventCode $EventCode$ on host $dest$.
  mitre_attack_id:
  - T1059.001
  - T1059
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - EventCode
  - ScriptBlockText
  - Computer
  - UserID
  risk_score: 40
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/honeypots/pwsh/windows-powershell-xml.log
    source: XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
    sourcetype: xmlwineventlog
