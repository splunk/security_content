author: Stanislav Miskovic, Splunk
date: '2020-10-18'
description: Credential extraction is often an illegal recovery of credential material
  from secured authentication resources and repositories. This process may also involve
  decryption or other transformations of the stored credential material. Native Microsoft
  debuggers, such as kd, ntkd, livekd and windbg, can be leveraged to read credential
  material directly from memory and process dumps.
eli5: This detection spots when native Microsoft debuggers ask for something inside
  the kernel (via ForceV1) while retrieving credentials.
how_to_implement: You must be ingesting Windows Security logs from devices of interest,
  including the event ID 4688 with enabled command line logging.
id: c20bb8ec-e1b0-4640-b0ef-3a4c54f8c112
known_false_positives: Although unlikely, using debuggers this way may be indicative
  of developers analyzing crash dumps of their code. Note, even for developers this
  is an unusual way of working on code - debuggers are mostly used to step through
  code, not analyze its crash dumps.
name: Credential Extraction native Microsoft debuggers peek into the kernel
references:
- https://medium.com/@clermont1050/covid-19-cyber-infection-c615ead7c29
search: ' | from read_ssa_enriched_events()

  | eval timestamp=parse_long(ucast(map_get(input_event, "_time"), "string", null)),
  cmd_line=ucast(map_get(input_event, "process"), "string", null), process_name=ucast(map_get(input_event,
  "process_name"), "string", null), parent_process_name=ucast(map_get(input_event,
  "parent_process_name"), "string", null) | where cmd_line != null AND parent_process_name
  != null AND process_name != null  AND ( match_regex(parent_process_name, /(?i)ntkd\.exe/)=true
  OR match_regex(parent_process_name, /(?i)livekd\.exe/)=true ) AND match_regex(process_name,
  /(?i)conhost\.exe/)=true AND match_regex(cmd_line, /(?i)0xffffffff/)=true AND match_regex(cmd_line,
  /(?i)\-ForceV1/)=true

  | eval start_time = timestamp, end_time = timestamp, entities = mvappend( ucast(map_get(input_event,
  "dest_user_id"), "string", null), ucast(map_get(input_event, "dest_device_id"),
  "string", null)), body = "TBD" | into write_ssa_detected_events();'
tags:
  asset_type: Windows
  cis20:
  - CIS 16
  kill_chain_phases:
  - Actions on Objectives
  mitre_technique_id:
  - T1003
  nist:
  - PR.IP
  - PR.AC
  product:
  - UEBA for Security Cloud
  required_fields:
  - process_name
  - parent_process_name
  - _time
  - dest_device_id
  - dest_user_id
  - process
  risk_severity: medium
  security_domain: endpoint
type: SSA
version: 1
