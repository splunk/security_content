name: GetWmiObject DS User with PowerShell
id: 22d3b118-04df-11ec-8fa3-acde48001122
version: 1
date: '2021-08-24'
author: Teoderick Contreras, Mauricio Velazco, Splunk
status: production
type: TTP
description: This analytic looks for the execution of `powershell.exe` with command-line
  arguments utilized to query for domain users. The `Get-WmiObject` commandlet combined
  with the `-class ds_user` parameter can be used to return the full list of users
  in a Windows domain. Red Teams and adversaries alike may leverage WMI in this case,
  using PowerShell, to enumerate domain users for situational awareness and Active
  Directory Discovery.
data_source:
- Sysmon Event ID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where (Processes.process_name="cmd.exe"
  OR Processes.process_name="powershell*") AND Processes.process = "*get-wmiobject*"
  AND Processes.process = "*ds_user*" AND Processes.process = "*root\\directory\\ldap*"
  AND Processes.process = "*-namespace*" by Processes.dest Processes.user Processes.parent_process
  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id
  Processes.parent_process_name | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `getwmiobject_ds_user_with_powershell_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Administrators or power users may use this command for troubleshooting.
references:
- https://jpcertcc.github.io/ToolAnalysisResultSheet/details/dsquery.htm
tags:
  analytic_story:
  - Active Directory Discovery
  asset_type: Endpoint
  confidence: 50
  impact: 50
  message: an instance of process $process_name$ with commandline $process$ in $dest$
  mitre_attack_id:
  - T1087.002
  - T1087
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: parent_process_name
    type: Process
    role:
    - Parent Process
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_id
  - Processes.parent_process_name
  risk_score: 25
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1087.002/AD_discovery/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
