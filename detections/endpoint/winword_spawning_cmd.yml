name: Winword Spawning Cmd
id: 6fcbaedc-a37b-11eb-956b-acde48001122
version: 4
date: '2024-08-15'
author: Michael Haag, Splunk
status: production
type: TTP
description: The following analytic identifies instances where Microsoft Word (winword.exe)
  spawns the command prompt (cmd.exe). This behavior is detected using Endpoint Detection
  and Response (EDR) telemetry, focusing on process creation events where the parent
  process is winword.exe. This activity is significant because it is uncommon and
  often associated with spearphishing attacks, where malicious attachments execute
  commands via cmd.exe. If confirmed malicious, this could allow an attacker to execute
  arbitrary commands, potentially leading to further system compromise, data exfiltration,
  or lateral movement within the network.
data_source:
- Sysmon EventID 1
- Windows Event Log Security 4688
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=winword.exe
  `process_cmd` by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process
  Processes.original_file_name Processes.process_name Processes.process Processes.process_id
  Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `winword_spawning_cmd_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: False positives should be limited, but if any are present,
  filter as needed.
references:
- https://app.any.run/tasks/73af0064-a785-4c0a-ab0d-cde593fe16ef/
tags:
  analytic_story:
  - Spearphishing Attachments
  - DarkCrystal RAT
  - CVE-2023-21716 Word RTF Heap Corruption
  asset_type: Endpoint
  confidence: 100
  impact: 70
  message: '$parent_process_name$ on $dest$ by $user$ launched command: $process_name$
    which is very common in spearphishing attacks.'
  mitre_attack_id:
  - T1566
  - T1566.001
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  - name: process_name
    type: Process
    role:
    - Attacker
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1566.001/macro/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
