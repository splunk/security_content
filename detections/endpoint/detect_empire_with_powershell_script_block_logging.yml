name: Detect Empire with PowerShell Script Block Logging
id: bc1dc6b8-c954-11eb-bade-acde48001122
version: 1
date: '2021-06-09'
author: Michael Haag, Splunk
type: TTP
datamodel: []
description: 'The following analytic utilizes PowerShell Script Block Logging (EventCode=4104)
  to identify suspicious PowerShell execution. Script Block Logging captures the command
  sent to PowerShell, the full command to be executed. Upon enabling, logs will output
  to Windows event logs. Dependent upon volume, enable on critical endpoints or all.
  \

  This analytic identifies the common PowerShell stager used by PowerShell-Empire.
  Each stager that may use PowerShell all uses the same pattern. The initial HTTP
  will be base64 encoded and use `system.net.webclient`. Note that some obfuscation
  may evade the analytic. \

  During triage, review parallel processes using an EDR product or 4688 events. It
  will be important to understand the timeline of events around this activity. Review
  the entire logged PowerShell script block.'
search: '`powershell` EventCode=4104  (Message=*system.net.webclient* AND Message=*frombase64string*)
  | stats count min(_time) as firstTime max(_time) as lastTime by OpCode ComputerName
  User EventCode Message | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `detect_empire_with_powershell_script_block_logging_filter`'
how_to_implement: To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
known_false_positives: False positives may only pertain to it not being related to
  Empire, but another framework. Filter as needed if any applications use the same
  pattern.
references:
- https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
- https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63
- https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf
- https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/
- https://github.com/BC-SECURITY/Empire
tags:
  analytic_story:
  - Malicious PowerShell
  automated_detection_testing: passed
  confidence: 90
  context:
  - Source:Endpoint
  - Stage:Execution
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1059.001/powershell_script_block_logging/windows-powershell.log
  impact: 90
  kill_chain_phases:
  - Exploitation
  message: The following behavior was identified and typically related to PowerShell-Empire
    on $ComputerName$ by $User$.
  mitre_attack_id:
  - T1059
  - T1059.001
  observable:
  - name: User
    type: User
    role:
    - Victim
  - name: ComputerName
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Message
  - OpCode
  - ComputerName
  - User
  - EventCode
  risk_score: 81
  security_domain: endpoint
