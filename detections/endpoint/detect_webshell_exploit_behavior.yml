name: Detect Webshell Exploit Behavior
id: 22597426-6dbd-49bd-bcdc-4ec19857192f
version: 2
date: '2023-07-10'
author: Steven Dick
status: production
type: TTP
description: This search is used to detect the abuse of web applications by adversaries.
  Adversaries may install a backdoor or script onto web servers by exploiting known
  vulnerabilities or misconfigruations. Web shells are used to establish persistent
  access to systems and provide a set of executable functions or a command-line interface
  on the system hosting the Web server.
data_source:
- Sysmon Event ID 1
search: '| tstats `security_content_summariesonly` count max(_time) as lastTime, min(_time)
  as firstTime from datamodel=Endpoint.Processes where (Processes.process_name IN
  ("arp.exe","at.exe","bash.exe","bitsadmin.exe","certutil.exe","cmd.exe","cscript.exe",
  "dsget.exe","dsquery.exe","find.exe","findstr.exe","fsutil.exe","hostname.exe","ipconfig.exe","ksh.exe","nbstat.exe",
  "net.exe","net1.exe","netdom.exe","netsh.exe","netstat.exe","nltest.exe","nslookup.exe","ntdsutil.exe","pathping.exe",
  "ping.exe","powershell.exe","pwsh.exe","qprocess.exe","query.exe","qwinsta.exe","reg.exe","rundll32.exe","sc.exe",
  "scrcons.exe","schtasks.exe","sh.exe","systeminfo.exe","tasklist.exe","tracert.exe","ver.exe","vssadmin.exe",
  "wevtutil.exe","whoami.exe","wmic.exe","wscript.exe","wusa.exe","zsh.exe") AND Processes.parent_process_name
  IN ("w3wp.exe", "http*.exe", "nginx*.exe", "php*.exe", "php-cgi*.exe","tomcat*.exe"))
  by Processes.dest,Processes.user,Processes.parent_process,Processes.parent_process_name,Processes.process,Processes.process_name
  | `drop_dm_object_name("Processes")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `detect_webshell_exploit_behavior_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Legitimate OS functions called by vendor applications, baseline
  the environment and filter before enabling. Recommend throttle by dest/process_name
references:
- https://attack.mitre.org/techniques/T1505/003/
- https://github.com/nsacyber/Mitigating-Web-Shells
- https://www.hackingarticles.in/multiple-ways-to-exploit-tomcat-manager/
tags:
  analytic_story:
  - ProxyNotShell
  - ProxyShell
  - CISA AA22-257A
  - HAFNIUM Group
  - BlackByte Ransomware
  - CISA AA22-264A
  - Citrix ShareFile RCE CVE-2023-24489
  - Flax Typhoon
  - WS FTP Server Critical Vulnerabilities
  asset_type: Endpoint
  confidence: 80
  impact: 100
  message: Webshell Exploit Behavior - $parent_process_name$ spawned $process_name$
    on $dest$.
  mitre_attack_id:
  - T1505
  - T1505.003
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: process_name
    type: Process
    role:
    - Attacker
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process
  - Processes.parent_process_name
  - Processes.process
  - Processes.process_name
  risk_score: 80
  security_domain: endpoint
  supported_tas:
  - Splunk_TA_microsoft_sysmon
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1505.003/generic_webshell_exploit/generic_webshell_exploit.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
