name: WinEvent Scheduled Task Created to Spawn Shell
id: 203ef0ea-9bd8-11eb-8201-acde48001122
version: 1
date: '2021-04-12'
author: Michael Haag, Splunk
type: TTP
datamodel: []
description: 'The following query utilizes Windows Security EventCode 4698, `A scheduled
  task was created`, to identify suspicious tasks registered on Windows either via
  schtasks.exe OR TaskService with a command to be executed with a native Windows
  shell (PowerShell, Cmd, Wscript, Cscript).\

  The search will return the first time and last time the task was registered, as
  well as the `Command` to be executed, `Task Name`, `Author`, `Enabled`, and whether
  it is `Hidden` or not.\

  schtasks.exe is natively found in `C:\Windows\system32` and `C:\Windows\syswow64`.\

  The following DLL(s) are loaded when schtasks.exe or TaskService is launched -`taskschd.dll`.
  If found loaded by another process, it is possible a scheduled task is being registered
  within that process context in memory.\

  Upon triage, identify the task scheduled source. Was it schtasks.exe or via TaskService?
  Review the job created and the Command to be executed. Capture any artifacts on
  disk and review. Identify any parallel processes within the same timeframe to identify
  source.'
search: '`wineventlog_security` EventCode=4698 | xmlkv Message | search Command IN
  ("*powershell.exe*", "*wscript.exe*", "*cscript.exe*", "*cmd.exe*", "*sh.exe*",
  "*ksh.exe*", "*zsh.exe*", "*bash.exe*", "*scrcons.exe*", "*pwsh.exe*") | stats count
  min(_time) as firstTime max(_time) as lastTime by dest, Task_Name, Command, Author,
  Enabled, Hidden | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `winevent_scheduled_task_created_to_spawn_shell_filter`'
how_to_implement: To successfully implement this search, you need to be ingesting
  Windows Security Event Logs with 4698 EventCode enabled. The Windows TA is also
  required.
known_false_positives: False positives are possible if legitimate applications are
  allowed to register tasks that call a shell to be spawned. Filter as needed based
  on command-line or processes that are used legitimately.
references:
- https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/
- https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4698
- https://redcanary.com/threat-detection-report/techniques/scheduled-task-job/
- https://docs.microsoft.com/en-us/windows/win32/taskschd/time-trigger-example--scripting-?redirectedfrom=MSDN
tags:
  analytic_story:
  - Windows Persistence Techniques
  - Ransomware
  - Ryuk Ransomware
  confidence: 100
  context:
  - Source:Endpoint
  - Stage:Execution
  - Stage:Persistence
  - Stage:Privilege Escalation
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1053.005/atomic_red_team/windows-security.log
  impact: 70
  kill_chain_phases:
  - Exploitation
  message: 'A windows scheduled task was created (task name=$Task_Name$) on $dest$
    by the following command: $Command$'
  mitre_attack_id:
  - T1053.005
  - T1053
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: Command
    type: Unknown
    role:
    - Target
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - dest
  - Task_Name
  - Description
  - Command
  risk_score: 70
  security_domain: endpoint
  asset_type: Endpoint
