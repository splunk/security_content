name: Recon Using WMI Class
id: 018c1972-ca07-11eb-9473-acde48001122
version: 3
date: '2024-05-18'
author: Teoderick Contreras, Splunk
status: production
type: Anomaly
description: The following analytic detects suspicious PowerShell activity via EventCode
  4104, where WMI performs event queries to gather information on running processes
  or services. This detection leverages PowerShell Script Block Logging to identify
  specific WMI queries targeting system information classes like Win32_Bios and Win32_OperatingSystem.
  This activity is significant as it often indicates reconnaissance efforts by an
  adversary to profile the compromised machine. If confirmed malicious, the attacker
  could gain detailed system information, aiding in further exploitation or lateral
  movement within the network.
data_source:
- Powershell Script Block Logging 4104
search: '`powershell` EventCode=4104 (ScriptBlockText= "*SELECT*" OR ScriptBlockText=
  "*Get-WmiObject*") AND (ScriptBlockText= "*Win32_Bios*" OR ScriptBlockText= "*Win32_OperatingSystem*"
  OR ScriptBlockText= "*Win32_Processor*" OR ScriptBlockText= "*Win32_ComputerSystem*"
  OR ScriptBlockText= "*Win32_PnPEntity*" OR ScriptBlockText= "*Win32_ShadowCopy*"
  OR ScriptBlockText= "*Win32_DiskDrive*" OR ScriptBlockText= "*Win32_PhysicalMemory*")
  | stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText
  Computer UserID | rename Computer as dest | rename UserID as user| `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `recon_using_wmi_class_filter`'
how_to_implement: To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
known_false_positives: network administrator may used this command for checking purposes
references:
- https://news.sophos.com/en-us/2020/05/12/maze-ransomware-1-year-counting/
- https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
- https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63
- https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf
- https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/
- https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html
- https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/
- https://blogs.vmware.com/security/2022/10/lockbit-3-0-also-known-as-lockbit-black.html
tags:
  analytic_story:
  - AsyncRAT
  - Qakbot
  - Industroyer2
  - Hermetic Wiper
  - LockBit Ransomware
  - Malicious PowerShell
  - Data Destruction
  - MoonPeak
  asset_type: Endpoint
  confidence: 80
  impact: 75
  message: A suspicious powershell script contains host recon commands detected on
    host $dest$
  mitre_attack_id:
  - T1592
  - T1059.001
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - EventCode
  - ScriptBlockText
  - Computer
  - UserID
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1059.001/powershell_script_block_logging/reconusingwmi.log
    source: XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
    sourcetype: xmlwineventlog
