name: Setting Credentials via DSInternals modules
id: d5ef590f-9bde-49eb-9c63-2f5b62a65b9c
version: 1
date: '2020-11-03'
author: Stanislav Miskovic, Splunk
type: streaming
datamodel: []
description: This detection identifies illegal setting of credentials via DSInternals
  modules.
search: '| from read_ssa_enriched_events()

  | eval timestamp=parse_long(ucast(map_get(input_event, "_time"), "string", null)),
  process_name=ucast(map_get(input_event, "process_name"), "string", null), process_path=ucast(map_get(input_event,
  "process_path"), "string", null), cmd_line=ucast(map_get(input_event, "process"),
  "string", null), parent_process_name=ucast(map_get(input_event, "parent_process_name"),
  "string", null) | where cmd_line != null AND ( match_regex(cmd_line, /(?i)Add-ADDBSidHistory/)=true
  OR match_regex(cmd_line, /(?i)Add-ADReplNgcKey/)=true OR match_regex(cmd_line, /(?i)Set-ADDBAccountPassword/)=true
  OR match_regex(cmd_line, /(?i)Set-ADDBAccountPasswordHash/)=true OR match_regex(cmd_line,
  /(?i)Set-ADDBBootKey/)=true OR match_regex(cmd_line, /(?i)Set-SamAccountPasswordHash/)=true
  OR match_regex(cmd_line, /(?i)Set-AzureADUserEx/)=true )

  | eval start_time = timestamp, end_time = timestamp, entities = mvappend( ucast(map_get(input_event,
  "dest_user_id"), "string", null), ucast(map_get(input_event, "dest_device_id"),
  "string", null)), body = "TBD" | into write_ssa_detected_events();'
how_to_implement: You must be ingesting Windows Security logs from devices of interest,
  including the event ID 4688 with enabled command line logging.
known_false_positives: None identified.
references:
- https://github.com/MichaelGrafnetter/DSInternals
tags:
  analytic_story:
  - Windows Persistence Techniques
  asset_type: Windows
  cis20:
  - CIS 16
  - CIS 20
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1098/logAllDSInternalsModules.log
  kill_chain_phases:
  - Actions on Objectives
  mitre_attack_id:
  - T1068
  - T1078
  - T1098
  nist:
  - PR.AC
  - PR.IP
  product:
  - UEBA for Security Cloud
  required_fields:
  - dest_device_id
  - process_name
  - parent_process_name
  - _time
  - process_path
  - dest_user_id
  - process
  risk_severity: high
  security_domain: endpoint
