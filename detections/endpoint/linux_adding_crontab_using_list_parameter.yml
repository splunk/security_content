name: Linux Adding Crontab Using List Parameter
id: 52f6d751-1fd4-4c74-a4c9-777ecfeb5c58
version: 1
date: '2023-04-14'
author: Teoderick Contreras, Splunk
status: production
type: Hunting
description: The following analytic identifies suspicious modifications to cron jobs
  on Linux systems using the crontab command with list parameters. This command line
  parameter can be abused by malware like Industroyer2, as well as adversaries and
  red teamers, to add a crontab entry for executing their malicious code on a schedule
  of their choice. However, it's important to note that administrators or normal users
  may also use this command for legitimate automation purposes, so filtering is required
  to minimize false positives. Identifying the modification of cron jobs using list
  parameters is valuable for a SOC as it indicates potential malicious activity or
  an attempt to establish persistence on the system. If a true positive is detected,
  further investigation should be conducted to analyze the added cron job, its associated
  command, and the impact it may have on the system. This includes examining the purpose
  of the job, reviewing any on-disk artifacts, and identifying any related processes
  or activities occurring concurrently. The impact of a true positive can range from
  unauthorized execution of malicious code to data destruction or other damaging outcomes.
data_source:
- Sysmon for Linux EventID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.process_name = "crontab"
  Processes.process= "* -l*" by  Processes.parent_process_name Processes.process_name
  Processes.process Processes.process_id Processes.parent_process_id Processes.dest
  Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `linux_adding_crontab_using_list_parameter_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this application
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/
- https://cert.gov.ua/article/39518
tags:
  analytic_story:
  - Industroyer2
  - Linux Privilege Escalation
  - Linux Living Off The Land
  - Data Destruction
  - Linux Persistence Techniques
  - Scheduled Tasks
  asset_type: Endpoint
  confidence: 50
  impact: 50
  message: A possible crontab list command $process$ executed on $dest$
  mitre_attack_id:
  - T1053.003
  - T1053
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_id
  risk_score: 25
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1053.003/crontab_list_parameter/sysmon_linux.log
    source: Syslog:Linux-Sysmon/Operational
    sourcetype: sysmon_linux
