name: Services Escalate Exe
id: c448488c-b7ec-11eb-8253-acde48001122
version: 3
date: '2024-05-31'
author: Michael Haag, Splunk
status: production
type: TTP
description: The following analytic identifies the execution of a randomly named binary
  via `services.exe`, indicative of privilege escalation using Cobalt Strike's `svc-exe`.
  This detection leverages data from Endpoint Detection and Response (EDR) agents,
  focusing on process lineage and command-line executions. This activity is significant
  as it often follows initial access, allowing adversaries to escalate privileges
  and establish persistence. If confirmed malicious, this behavior could enable attackers
  to execute arbitrary code, maintain long-term access, and potentially move laterally
  within the network, posing a severe threat to the organization's security.
data_source:
- Sysmon EventID 1
- Windows Event Log Security 4688
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=services.exe
  Processes.process_path=*admin$* by Processes.process_path Processes.dest Processes.user
  Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process
  Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)`
  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `services_escalate_exe_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: False positives should be limited as `services.exe` should
  never spawn a process from `ADMIN$`. Filter as needed.
references:
- https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/
- https://attack.mitre.org/techniques/T1548/
- https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/index.htm#cshid=1085
tags:
  analytic_story:
  - BlackByte Ransomware
  - Cobalt Strike
  - Graceful Wipe Out Attack
  - CISA AA23-347A
  asset_type: Endpoint
  confidence: 95
  impact: 80
  message: A service process $parent_process_name$ with process path $process_path$
    in host $dest$
  mitre_attack_id:
  - T1548
  observable:
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_id
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1055/cobalt_strike/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
