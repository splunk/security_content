name: Runas Execution in CommandLine
id: 4807e716-43a4-11ec-a0e7-acde48001122
version: 2
date: '2024-05-30'
author: Teoderick Contreras, Splunk
status: production
type: Hunting
description: The following analytic detects the execution of the runas.exe process
  with administrator user options. It leverages data from Endpoint Detection and Response
  (EDR) agents, focusing on command-line executions and process details. This activity
  is significant as it may indicate an attempt to gain elevated privileges, a common
  tactic in privilege escalation and lateral movement. If confirmed malicious, this
  could allow an attacker to execute commands with higher privileges, potentially
  leading to unauthorized access, data exfiltration, or further compromise of the
  target host.
data_source:
- Sysmon EventID 1
- Windows Event Log Security 4688
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where `process_runas` AND Processes.process
  = "*/user:*" AND Processes.process = "*admin*" by Processes.dest Processes.user
  Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process
  Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)`
  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `runas_execution_in_commandline_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: A network operator or systems administrator may utilize an
  automated or manual execute this command that may generate false positives. filter
  is needed.
references:
- https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/
tags:
  analytic_story:
  - Data Destruction
  - Hermetic Wiper
  - Windows Privilege Escalation
  asset_type: Endpoint
  confidence: 50
  impact: 50
  message: elevated process using runas on $dest$ by $user$
  mitre_attack_id:
  - T1134
  - T1134.001
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_id
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/vilsel/sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
