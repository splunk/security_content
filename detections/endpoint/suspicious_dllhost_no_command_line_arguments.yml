name: Suspicious DLLHost no Command Line Arguments
id: ff61e98c-0337-4593-a78f-72a676c56f26
version: 5
date: '2024-05-12'
author: Michael Haag, Splunk
status: production
type: TTP
description: The following analytic detects instances of DLLHost.exe executing without
  command line arguments. This behavior is unusual and often associated with malicious
  activities, such as those performed by Cobalt Strike. The detection leverages data
  from Endpoint Detection and Response (EDR) agents, focusing on process execution
  logs. This activity is significant because DLLHost.exe typically requires arguments
  to function correctly, and its absence may indicate an attempt to evade detection.
  If confirmed malicious, this could lead to unauthorized actions like credential
  dumping or file manipulation, posing a severe threat to the environment.
data_source:
- Sysmon EventID 1
- Windows Event Log Security 4688
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes
  where `process_dllhost` by _time span=1h  Processes.process_id Processes.process_name
  Processes.dest Processes.user Processes.process_path Processes.process Processes.parent_process_name
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | regex process="(?i)(dllhost\.exe.{0,4}$)" | `suspicious_dllhost_no_command_line_arguments_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Limited false positives may be present in small environments.
  Tuning may be required based on parent process.
references:
- https://raw.githubusercontent.com/threatexpress/malleable-c2/c3385e481159a759f79b8acfe11acf240893b830/jquery-c2.4.2.profile
- https://www.cobaltstrike.com/blog/learn-pipe-fitting-for-all-of-your-offense-projects/
tags:
  analytic_story:
  - BlackByte Ransomware
  - Cobalt Strike
  - Graceful Wipe Out Attack
  asset_type: Endpoint
  confidence: 70
  impact: 70
  message: Suspicious dllhost.exe process with no command line arguments executed
    on $dest$ by $user$
  mitre_attack_id:
  - T1055
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1055/cobalt_strike/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
