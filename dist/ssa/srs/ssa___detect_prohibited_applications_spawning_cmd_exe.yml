name: Detect Prohibited Applications Spawning cmd exe
id: c10a18cb-fd80-4ffa-a844-25026e0a0c94
version: 4
status: production
description: The following analytic identifies parent processes, browsers, Windows
  terminal applications, Office Products and Java spawning cmd.exe. By its very nature,
  many applications spawn cmd.exe natively or built into macros. Much of this will
  need to be tuned to further enhance the risk.
search: ' $main = from source  | eval timestamp = time  | eval metadata_uid = metadata.uid  |
  eval process_pid = process.pid | eval process_file = process.file | eval process_file_path
  = process_file.path | eval process_file_name = lower(process_file.name) | eval process_cmd_line
  = lower(process.cmd_line) | eval actor_user = actor.user | eval actor_user_name
  = actor_user.name | eval actor_process = actor.process | eval actor_process_pid
  = actor_process.pid | eval actor_process_file = actor_process.file | eval actor_process_file_path
  = actor_process_file.path | eval actor_process_file_name = lower(actor_process_file.name)
  | eval device_hostname = device.hostname | where ((actor_process_file_name="winword.exe"
  OR actor_process_file_name="excel.exe" OR actor_process_file_name="outlook.exe"
  OR actor_process_file_name="acrobat.exe" OR actor_process_file_name="acrord32.exe"
  OR actor_process_file_name="iexplore.exe" OR actor_process_file_name="opera.exe"
  OR actor_process_file_name="firefox.exe" OR actor_process_file_name="powershell.exe")
  OR (actor_process_file_name="java.exe" AND (NOT match(actor_process_file_name, /(?i)patch1-Hotfix1a/)=true))
  OR (actor_process_file_name="chrome.exe" AND (NOT process_cmd_line="chrome-extension")))
  AND process_file_name="cmd.exe" 
  | eval devices = [{"hostname": device_hostname, "type_id": 0, "uuid": device.uuid}],
    time = timestamp,
    evidence = {"process.pid": process_pid, "process.file.path": process_file_path, "process.file.name": process_file_name, "process.cmd_line": process_cmd_line, "actor.user.name": actor_user_name, "actor.process.pid": actor_process_pid, "actor.process.file.path": actor_process_file_path, "actor.process.file.name": actor_process_file_name, "device.hostname": device_hostname},
    message = "Detect Prohibited Applications Spawning cmd exe has been triggered on " + device_hostname + " by " + actor_user_name + ".",
    users = [{"name": actor_user_name, "uid": actor_user.uid}],
    activity_id = 1,
    cis_csc = [{"control": "CIS 10", "version": 8}], 
    analytic_stories = ["Suspicious Command-Line Executions", "Insider Threat"],
    class_name = "Detection Report", 
    confidence = 50,
    confidence_id = 2,
    duration = 0, 
    impact = 70,
    impact_id = 4,
    kill_chain = [{"phase": "Installation", "phase_id": 5}],
    nist = ["DE.AE"], 
    risk_level = "Low", 
    category_uid = 2,
    class_uid = 102001,
    risk_level_id = 1,
    risk_score = 35,
    severity_id = 0,
    rule = {"name": "Detect Prohibited Applications Spawning cmd exe", "uid": "c10a18cb-fd80-4ffa-a844-25026e0a0c94", "type": "Streaming"},
    metadata = {"customer_uid": metadata.customer_uid, "product": {"name": "Behavior Analytics", "vendor_name": "Splunk"}, "version": "1.0.0-rc.2", "logged_time": time()},
    type_uid = 10200101,
    start_time = timestamp,
    end_time = timestamp
  | fields metadata, rule, activity_id, analytic_stories, cis_csc, category_uid, class_name, class_uid, confidence, confidence_id, devices, duration, time, evidence, impact, impact_id, kill_chain, message, nist, observables, risk_level, risk_level_id, risk_score, severity_id, type_uid, users, start_time, end_time 
  | into sink; '
how_to_implement: In order to successfully implement this analytic, you will need
  endpoint process data from a EDR product or Sysmon. This search has been modified
  to process raw sysmon data from attack_range's nxlogs on DSP.
known_false_positives: There are circumstances where an application may legitimately
  execute and interact with the Windows command-line interface.
references:
- https://attack.mitre.org/techniques/T1059/
tags:
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 35
  security_domain: endpoint
  risk_severity: low
  research_site_url: https://research.splunk.com/endpoint/c10a18cb-fd80-4ffa-a844-25026e0a0c94/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - Suspicious Command-Line Executions
    - Insider Threat
    cis20:
    - CIS 10
    kill_chain_phases:
    - Installation
    mitre_attack_id:
    - T1059
    nist:
    - DE.AE
test:
  name: Detect Prohibited Applications Spawning cmd exe Unit Test
  tests:
  - name: Detect Prohibited Applications Spawning cmd exe
    attack_data:
    - file_name: windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1059.003/powershell_spawn_cmd/windows-security.log
      source: WinEventLog:Security
runtime: SPL2
internalVersion: 2
