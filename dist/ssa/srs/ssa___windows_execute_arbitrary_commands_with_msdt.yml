name: Windows Execute Arbitrary Commands with MSDT
id: f253f9c2-10f0-4cc8-b469-f505ba8c2038
version: 1
status: production
description: The following analytic identifies a recently disclosed arbitraty command
  execution using Windows msdt.exe - a Diagnostics Troubleshooting Wizard. The sample
  identified will use the ms-msdt:/ protocol handler to load msdt.exe to retrieve
  a remote payload. During triage, review file modifications for html. Identify parallel
  process execution that may be related, including an Office Product.
search: ' $main = from source  | eval timestamp = time  | eval metadata_uid = metadata.uid  |
  eval process_pid = process.pid | eval process_file = process.file | eval process_file_path
  = process_file.path | eval process_file_name = lower(process_file.name) | eval process_cmd_line
  = process.cmd_line | eval actor_user = actor.user | eval actor_user_name = actor_user.name
  | eval actor_process = actor.process | eval actor_process_pid = actor_process.pid
  | eval actor_process_file = actor_process.file | eval actor_process_file_path =
  actor_process_file.path | eval actor_process_file_name = actor_process_file.name
  | eval device_hostname = device.hostname | where ((process_cmd_line LIKE "%ms-msdt:/id%"
  OR process_cmd_line LIKE "%ms-msdt:-id%" OR process_cmd_line LIKE "%ms-msdt:/id%"
  OR process_cmd_line LIKE "%ms-msdt:%" OR process_cmd_line LIKE "%msdt%") AND process_file_name="msdt.exe")
  AND (match(process_cmd_line, /(?i).xml/)=true OR match(process_cmd_line, /(?i)it_rebrowseforfile=/)=true
  OR match(process_cmd_line, /(?i)it_browseforfile=/)=true) AND match(process_cmd_line,
  /(?i)pcwdiagnostic/)=true 
  | eval devices = [{"hostname": device_hostname, "type_id": 0, "uuid": device.uuid}],
    time = timestamp,
    evidence = {"process.pid": process_pid, "process.file.path": process_file_path, "process.file.name": process_file_name, "process.cmd_line": process_cmd_line, "actor.user.name": actor_user_name, "actor.process.pid": actor_process_pid, "actor.process.file.path": actor_process_file_path, "actor.process.file.name": actor_process_file_name, "device.hostname": device_hostname},
    message = "Windows Execute Arbitrary Commands with MSDT has been triggered on " + device_hostname + " by " + actor_user_name + ".",
    users = [{"name": actor_user_name, "uid": actor_user.uid}],
    activity_id = 1,
    cis_csc = [{"control": "CIS 10", "version": 8}], 
    analytic_stories = ["Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190"],
    class_name = "Detection Report", 
    confidence = 100,
    confidence_id = 3,
    duration = 0, 
    impact = 100,
    impact_id = 5,
    kill_chain = [{"phase": "Exploitation", "phase_id": 4}],
    nist = ["DE.AE"], 
    risk_level = "Critical", 
    category_uid = 2,
    class_uid = 102001,
    risk_level_id = 4,
    risk_score = 100,
    severity_id = 0,
    rule = {"name": "Windows Execute Arbitrary Commands with MSDT", "uid": "f253f9c2-10f0-4cc8-b469-f505ba8c2038", "type": "Streaming"},
    metadata = {"customer_uid": metadata.customer_uid, "product": {"name": "Behavior Analytics", "vendor_name": "Splunk"}, "version": "1.0.0-rc.2", "logged_time": time()},
    type_uid = 10200101,
    start_time = timestamp,
    end_time = timestamp
  | fields metadata, rule, activity_id, analytic_stories, cis_csc, category_uid, class_name, class_uid, confidence, confidence_id, devices, duration, time, evidence, impact, impact_id, kill_chain, message, nist, observables, risk_level, risk_level_id, risk_score, severity_id, type_uid, users, start_time, end_time 
  | into sink; '
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: False positives may be present, filter as needed. Added .xml
  to potentially capture any answer file usage. Remove as needed.
references:
- https://isc.sans.edu/diary/rss/28694
- https://doublepulsar.com/follina-a-microsoft-office-code-execution-vulnerability-1a47fce5629e
- https://twitter.com/nao_sec/status/1530196847679401984?s=20&t=ZiXYI4dQuA-0_dzQzSUb3A
- https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/
- https://www.virustotal.com/gui/file/4a24048f81afbe9fb62e7a6a49adbd1faf41f266b5f9feecdceb567aec096784/detection
- https://strontic.github.io/xcyclopedia/library/msdt.exe-152D4C9F63EFB332CCB134C6953C0104.html
tags:
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 100
  security_domain: endpoint
  risk_severity: high
  research_site_url: https://research.splunk.com/endpoint/f253f9c2-10f0-4cc8-b469-f505ba8c2038/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190
    cis20:
    - CIS 10
    kill_chain_phases:
    - Exploitation
    mitre_attack_id:
    - T1218
    nist:
    - DE.CM
test:
  name: Windows Execute Arbitrary Commands with MSDT Unit Test
  tests:
  - name: Windows Execute Arbitrary Commands with MSDT
    attack_data:
    - file_name: msdt-windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1566.001/macro/msdt-windows-security.log
      source: XmlWinEventLog
runtime: SPL2
internalVersion: 2
