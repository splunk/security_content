name: Possible Lateral Movement PowerShell Spawn
id: 22282a2d-dc19-4b88-ac61-6c86ff92904f
version: 1
status: production
detection_type: STREAMING
description: 'The following analytic is designed to identify possible lateral movement
  attacks that involve the spawning of a PowerShell process as a child or grandchild
  process of commonly abused processes. These processes include services.exe, wmiprsve.exe,
  svchost.exe, wsmprovhost.exe, and mmc.exe.\

  Such behavior is indicative of legitimate Windows features such as the Service Control
  Manager, Windows Management Instrumentation, Task Scheduler, Windows Remote Management,
  and the DCOM protocol being abused to start a process on a remote endpoint. This
  behavior is often seen during lateral movement techniques where adversaries or red
  teams abuse these services for lateral movement and remote code execution.'
search: ' $main = from source  | eval timestamp = time  | eval metadata_uid = metadata.uid  |
  eval process_pid = process.pid | eval process_file = process.file | eval process_file_path
  = process_file.path | eval process_file_name = lower(process_file.name) | eval process_cmd_line
  = process.cmd_line | eval actor_user = actor.user | eval actor_user_name = actor_user.name
  | eval actor_process = actor.process | eval actor_process_pid = actor_process.pid
  | eval actor_process_file = actor_process.file | eval actor_process_file_path =
  actor_process_file.path | eval actor_process_file_name = lower(actor_process_file.name)
  | eval device_hostname = device.hostname | where (actor_process_file_name IN ("wmiprvse.exe",
  "services.exe", "svchost.exe", "wsmprovhost.exe", "mmc.exe")) AND ((process_file_name
  IN ("powershell.exe", "pwsh.exe")) OR (process_file_name="cmd.exe" AND (process_cmd_line
  LIKE "%powershell.exe%" OR process_cmd_line LIKE "%pwsh.exe%"))) 
  | eval devices = [{"hostname": device_hostname, "type_id": 0, "uuid": device.uuid}],
    time = timestamp,
    evidence = {"process.pid": process_pid, "process.file.path": process_file_path, "process.file.name": process_file_name, "process.cmd_line": process_cmd_line, "actor.user.name": actor_user_name, "actor.process.pid": actor_process_pid, "actor.process.file.path": actor_process_file_path, "actor.process.file.name": actor_process_file_name, "device.hostname": device_hostname, "sourceType": metadata.source_type, "source": metadata.source},
    message = "Possible Lateral Movement PowerShell Spawn has been triggered on " + device_hostname + " by " + actor_user_name + ".",
    users = [{"name": actor_user_name, "uuid": actor_user.uuid, "uid": actor_user.uid}],
    activity_id = 1,
    cis_csc = [{"control": "CIS 10", "version": 8}], 
    analytic_stories = ["Active Directory Lateral Movement", "Malicious PowerShell", "Hermetic Wiper", "Data Destruction", "Scheduled Tasks"],
    class_name = "Detection Report", 
    confidence = 50,
    confidence_id = 2,
    duration = 0, 
    impact = 90,
    impact_id = 5,
    kill_chain = [{"phase": "Exploitation", "phase_id": 4}, {"phase": "Installation", "phase_id": 5}],
    nist = ["DE.AE"], 
    risk_level = "Medium", 
    category_uid = 2,
    class_uid = 102001,
    risk_level_id = 2,
    risk_score = 45,
    severity_id = 0,
    rule = {"name": "Possible Lateral Movement PowerShell Spawn", "uid": "22282a2d-dc19-4b88-ac61-6c86ff92904f", "type": "Streaming"},
    metadata = {"customer_uid": metadata.customer_uid, "product": {"name": "Behavior Analytics", "vendor_name": "Splunk"}, "version": "1.0.0-rc.2", "logged_time": time()},
    type_uid = 10200101,
    start_time = timestamp,
    end_time = timestamp
  | fields metadata, rule, activity_id, analytic_stories, cis_csc, category_uid, class_name, class_uid, confidence, confidence_id, devices, duration, time, evidence, impact, impact_id, kill_chain, message, nist, observables, risk_level, risk_level_id, risk_score, severity_id, type_uid, users, start_time, end_time 
  | into sink; '
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Legitimate applications may spawn PowerShell as a child process
  of the the identified processes. Filter as needed.
references:
- https://attack.mitre.org/techniques/T1021/003/
- https://attack.mitre.org/techniques/T1021/006/
- https://attack.mitre.org/techniques/T1047/
- https://attack.mitre.org/techniques/T1053/005/
- https://attack.mitre.org/techniques/T1543/003/
tags:
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 45
  security_domain: endpoint
  risk_severity: low
  research_site_url: https://research.splunk.com/endpoint/22282a2d-dc19-4b88-ac61-6c86ff92904f/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - Active Directory Lateral Movement
    - Malicious PowerShell
    - Hermetic Wiper
    - Data Destruction
    - Scheduled Tasks
    cis20:
    - CIS 10
    kill_chain_phases:
    - Exploitation
    - Installation
    mitre_attack_id:
    - T1021
    - T1021.003
    - T1021.006
    - T1047
    - T1053.005
    - T1543.003
    - T1059.001
    - T1218.014
    nist:
    - DE.CM
test:
  name: Possible Lateral Movement PowerShell Spawn Unit Test
  tests:
  - name: Possible Lateral Movement PowerShell Spawn
    attack_data:
    - file_name: windows_security_xml.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1021.003/lateral_movement/windows_security_xml.log
      source: XmlWinEventLog:Security
runtime: SPL2
internalVersion: 2
