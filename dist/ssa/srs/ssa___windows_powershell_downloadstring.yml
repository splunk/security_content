name: Windows Powershell DownloadString
id: e4a2cc58-59d4-480a-8992-9dfb95a4bacd
version: 1
status: production
detection_type: STREAMING
description: The following analytic identifies the use of PowerShell downloading a
  file using `DownloadString` method. This particular method is utilized in many different
  PowerShell frameworks to download files and output to disk. Identify the source
  (IP/domain) and destination file and triage appropriately. If AMSI logging or PowerShell
  transaction logs are available, review for further details of the implant.
search: ' $main = from source  | eval timestamp = time  | eval metadata_uid = metadata.uid  |
  eval process_pid = process.pid | eval process_file = process.file | eval process_file_path
  = process_file.path | eval process_file_name = lower(process_file.name) | eval process_cmd_line
  = process.cmd_line | eval actor_user = actor.user | eval actor_user_name = actor_user.name
  | eval actor_process = actor.process | eval actor_process_pid = actor_process.pid
  | eval actor_process_file = actor_process.file | eval actor_process_file_path =
  actor_process_file.path | eval actor_process_file_name = actor_process_file.name
  | eval device_hostname = device.hostname | where (process_file_name IN ("powershell_ise.exe",
  "powershell.exe", "sqltoolsps.exe", "sqlps.exe", "pwsh.exe", "pwsh.exe")) AND match(process_cmd_line,
  /(?i)DownloadString/)=true 
  | eval devices = [{"hostname": device_hostname, "type_id": 0, "uuid": device.uuid}],
    time = timestamp,
    evidence = {"process.pid": process_pid, "process.file.path": process_file_path, "process.file.name": process_file_name, "process.cmd_line": process_cmd_line, "actor.user.name": actor_user_name, "actor.process.pid": actor_process_pid, "actor.process.file.path": actor_process_file_path, "actor.process.file.name": actor_process_file_name, "device.hostname": device_hostname, "sourceType": metadata.source_type, "source": metadata.source},
    message = "Windows Powershell DownloadString has been triggered on " + device_hostname + " by " + actor_user_name + ".",
    users = [{"name": actor_user_name, "uuid": actor_user.uuid, "uid": actor_user.uid}],
    activity_id = 1,
    cis_csc = [{"control": "CIS 10", "version": 8}], 
    analytic_stories = ["Winter Vivern", "Ingress Tool Transfer", "Hermetic Wiper", "Malicious PowerShell", "HAFNIUM Group", "Data Destruction", "IcedID", "SysAid On-Prem Software CVE-2023-47246 Vulnerability"],
    class_name = "Detection Report", 
    confidence = 70,
    confidence_id = 3,
    duration = 0, 
    impact = 80,
    impact_id = 5,
    kill_chain = [{"phase": "Installation", "phase_id": 5}, {"phase": "Command and Control", "phase_id": 6}],
    nist = ["DE.AE"], 
    risk_level = "Medium", 
    category_uid = 2,
    class_uid = 102001,
    risk_level_id = 2,
    risk_score = 56,
    severity_id = 0,
    rule = {"name": "Windows Powershell DownloadString", "uid": "e4a2cc58-59d4-480a-8992-9dfb95a4bacd", "type": "Streaming"},
    metadata = {"customer_uid": metadata.customer_uid, "product": {"name": "Behavior Analytics", "vendor_name": "Splunk"}, "version": "1.0.0-rc.2", "logged_time": time()},
    type_uid = 10200101,
    start_time = timestamp,
    end_time = timestamp
  | fields metadata, rule, activity_id, analytic_stories, cis_csc, category_uid, class_name, class_uid, confidence, confidence_id, devices, duration, time, evidence, impact, impact_id, kill_chain, message, nist, observables, risk_level, risk_level_id, risk_score, severity_id, type_uid, users, start_time, end_time 
  | into sink; '
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: False positives may be present and filtering will need to occur
  by parent process or command line argument. It may be required to modify this query
  to an EDR product for more granular coverage.
references:
- https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstring?view=net-5.0
- https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md
- https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/
tags:
  required_fields:
  - process.pid
  - process.file.path
  - process.file.name
  - process.cmd_line
  - actor.user.name
  - actor.process.pid
  - actor.process.file.path
  - actor.process.file.name
  - device.hostname
  risk_score: 56
  security_domain: endpoint
  risk_severity: medium
  research_site_url: https://research.splunk.com/endpoint/e4a2cc58-59d4-480a-8992-9dfb95a4bacd/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
  annotations:
    analytic_story:
    - Winter Vivern
    - Ingress Tool Transfer
    - Hermetic Wiper
    - Malicious PowerShell
    - HAFNIUM Group
    - Data Destruction
    - IcedID
    - SysAid On-Prem Software CVE-2023-47246 Vulnerability
    cis20:
    - CIS 10
    kill_chain_phases:
    - Installation
    - Command and Control
    mitre_attack_id:
    - T1059
    - T1059.001
    - T1105
    nist:
    - DE.CM
test:
  name: Windows Powershell DownloadString Unit Test
  tests:
  - name: Windows Powershell DownloadString
    attack_data:
    - file_name: windows-security-2.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1059.001/atomic_red_team/windows-security-2.log
      source: XmlWinEventLog:Security
runtime: SPL2
internalVersion: 2
