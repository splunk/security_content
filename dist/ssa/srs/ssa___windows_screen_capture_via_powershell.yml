name: Windows Screen Capture Via Powershell
id: 3b49e58f-04c9-416b-96c9-016ac64e7e5f
version: 1
status: validation
detection_type: STREAMING
description: The following analytic identifies a potential PowerShell script that
  captures screen images on compromised or targeted hosts. This technique was observed
  in the Winter-Vivern malware, which attempts to capture desktop screens using a
  PowerShell script and send the images to its C2 server as part of its exfiltration
  strategy. This TTP serves as a useful indicator that a PowerShell process may be
  gathering desktop screenshots from a host system, potentially signaling malicious
  activity.
search: ' $main = from source  | eval timestamp = time  | eval metadata_uid = metadata.uid  |
  eval device_hostname = device.hostname | eval process_file = process.file | eval
  process_file_path = process_file.path | eval process_uid = process.uid | eval process_cmd_line
  = process.cmd_line | eval actor_user = actor.user | eval actor_user_uid = actor_user.uid
  | where match(process_cmd_line, /(?i).CopyFromScreen/)=true 
  | eval devices = [{"hostname": device_hostname, "type_id": 0, "uuid": device.uuid}],
    time = timestamp,
    evidence = {"device.hostname": device_hostname, "process.file.path": process_file_path, "process.uid": process_uid, "process.cmd_line": process_cmd_line, "actor.user.uid": actor_user_uid, "sourceType": metadata.source_type, "source": metadata.source},
    message = "Windows Screen Capture Via Powershell has been triggered on " + device_hostname + " by " + "Unknown" + ".",
    users = [{"name": "Unknown", "uuid": actor_user.uuid, "uid": actor_user.uid}],
    activity_id = 1,
    cis_csc = [{"control": "CIS 10", "version": 8}], 
    analytic_stories = ["Winter Vivern"],
    class_name = "Detection Report", 
    confidence = 70,
    confidence_id = 3,
    duration = 0, 
    impact = 70,
    impact_id = 4,
    kill_chain = [{"phase": "Exploitation", "phase_id": 4}],
    nist = ["DE.AE"], 
    risk_level = "Medium", 
    category_uid = 2,
    class_uid = 102001,
    risk_level_id = 2,
    risk_score = 49,
    severity_id = 0,
    rule = {"name": "Windows Screen Capture Via Powershell", "uid": "3b49e58f-04c9-416b-96c9-016ac64e7e5f", "type": "Streaming"},
    metadata = {"customer_uid": metadata.customer_uid, "product": {"name": "Behavior Analytics", "vendor_name": "Splunk"}, "version": "1.0.0-rc.2", "logged_time": time()},
    type_uid = 10200101,
    start_time = timestamp,
    end_time = timestamp
  | fields metadata, rule, activity_id, analytic_stories, cis_csc, category_uid, class_name, class_uid, confidence, confidence_id, devices, duration, time, evidence, impact, impact_id, kill_chain, message, nist, observables, risk_level, risk_level_id, risk_score, severity_id, type_uid, users, start_time, end_time 
  | into sink; '
how_to_implement: To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
known_false_positives: unknown
references:
- https://twitter.com/_CERT_UA/status/1620781684257091584
- https://cert.gov.ua/article/3761104
tags:
  required_fields:
  - device.hostname
  - process.file.path
  - process.uid
  - process.cmd_line
  - actor.user.uid
  risk_score: 49
  security_domain: endpoint
  risk_severity: low
  research_site_url: https://research.splunk.com/endpoint/3b49e58f-04c9-416b-96c9-016ac64e7e5f/
  event_schema: ocsf
  mappings:
  - ocsf: device.hostname
    cim: dest
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.uid
    cim: process_id
  - ocsf: process.cmd_line
    cim: process
  - ocsf: actor.user.uid
    cim: user_id
  annotations:
    analytic_story:
    - Winter Vivern
    cis20:
    - CIS 10
    kill_chain_phases:
    - Exploitation
    mitre_attack_id:
    - T1113
    nist:
    - DE.CM
test:
  name: Windows Screen Capture Via Powershell Unit Test
  tests:
  - name: Windows Screen Capture Via Powershell
    attack_data:
    - file_name: windows-powershell-xml.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/winter-vivern/pwh_exfiltration/windows-powershell-xml.log
      source: XmlWinEventLog
runtime: SPL2
internalVersion: 2
